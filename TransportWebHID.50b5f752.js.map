{"mappings":"slFAiBMA,EAAgB,CACpB,CACEC,SAAUC,EAAAC,oBAIRC,EAAc,WAClB,OAAAC,QAAQC,WAAWC,OAAOC,YAAaD,OAAOC,UAAUC,K,EAEpDC,EAAS,WAEL,IAAAD,EAAQD,UAASC,IACzB,IAAKA,EACH,MAAM,IAAI,EAAAE,EAAAC,gBACR,iCACA,mBAEJ,OAAOH,C,EAGT,SAAeI,I,yFACE,gBAAMH,IAASI,cAAc,CAC1CC,QAASf,K,OAEX,OAHMgB,EAASC,EAAAC,OAGXC,MAAMC,QAAQJ,GAAS,GAAOA,GAClC,GAAO,CAACA,I,OAGV,SAAeK,I,mFACG,gBAAMX,IAASY,c,OAC/B,SADgBL,EAAAC,OACDK,QAAO,SAACC,GAAM,OAAAA,EAAEvB,WAAaC,EAAAC,iB,YAiB9C,IAAqBsB,EAArB,SAAAC,GAME,SAAAC,EAAYX,GAAZ,IAAAY,EACEF,EAAAG,KAAAC,OAAOA,K,OAJTF,EAAAG,QAAUC,KAAKC,MAAsB,MAAhBD,KAAKE,UAC1BN,EAAAO,WAAa,GAYbP,EAAAQ,OAAmB,GAEnBR,EAAAS,KAAO,WACL,OAAIT,EAAKQ,OAAOE,OACPjC,QAAQC,QAASsB,EAAKQ,OAAOG,SAG/B,IAAIlC,SAAQ,SAACmC,GAClBZ,EAAKa,cAAgBD,C,KAGzBZ,EAAAc,cAAgB,SAACC,GACf,IAAMC,EAASC,EAAOC,KAAKH,EAAEI,KAAKH,QAE9BhB,EAAKa,eACPb,EAAKa,cAAcG,GACnBhB,EAAKa,cAAgB,MAErBb,EAAKQ,OAAOY,KAAKJ,E,EA6FrBhB,EAAAqB,oBAAqB,EACrBrB,EAAAsB,gBAAkB,SAACP,GACbf,EAAKqB,qBACTrB,EAAKqB,oBAAqB,EAC1BrB,EAAKuB,KAAK,aAAcR,G,EAiB1Bf,EAAAwB,SAAW,SAAOC,GAAlB,OAAAC,EAAA1B,OAAA,qB,sDACY,gBAAME,KAAKyB,oBAAmB,WAA9B,OAAAD,EAAAE,OAAA,qB,wEACAzB,GAAFd,EAA0Ba,MAAjBC,QAAEI,EAAUlB,EAAAkB,YAC3B,EAAAsB,EAAAC,KAAI,OAAQ,MAAQL,EAAKM,SAAS,QAC5BC,GAAU,EAAAC,EAAAC,SAAW/B,EAASI,GAE9B4B,EAASH,EAAQI,WAAWX,GAEzBY,EAAI,E,iBAAG,OAAAA,EAAIF,EAAOzB,OACzB,GAAMR,KAAKd,OAAOkD,WAAW,EAAGH,EAAOE,KADzB,M,OACdE,EAAAjD,O,wBADiC+C,I,aAQ5B,OAAEG,EAASR,EAAQS,iBAAiBC,IAApC,MACU,GAAMxC,KAAKO,Q,cAApBO,EAASuB,EAAAjD,OACfoD,EAAMV,EAAQW,eAAeD,EAAK1B,G,aAIpC,OADA,EAAAa,EAAAC,KAAI,OAAQ,MAAQU,EAAOT,SAAS,QACpC,GAAOS,G,UACD,OAAC,SAACzB,GACR,GAAIA,GAAKA,EAAE6B,SAAW7B,EAAE6B,QAAQC,SAAS,SAGvC,MAFAjB,EAAKN,gBAAgBP,GAEf,IAAI,EAAAhC,EAAA+D,mCAAkC/B,EAAE6B,SAGhD,MAAM7B,C,YAER,SA/BUgC,EAAAzD,Q,QA7IVU,EAAKZ,OAASA,EACdY,EAAKgD,YACyB,iBAArB5D,EAAO6D,WACV,EAAA3E,EAAA4E,sBAAqB9D,EAAO6D,gBAC5BE,EACN/D,EAAOgE,iBAAiB,cAAepD,EAAKc,e,EA2KhD,OAxL6CuC,EAAAtD,EAAAD,GA8F9BC,EAAAuD,QAAb,W,2FACmB,gBAAMrE,K,OACvB,OADMI,EAAAkE,EAAAC,WAAA,GAAWjB,EAAAjD,OAA4B,IAAtCF,EAAMC,EAAA,GACb,GAAOU,EAAgB0D,KAAKrE,I,QAMjBW,EAAA2D,cAAb,W,yFACkB,gBAAMjE,K,OACtB,OAAuB,KADjBkE,EAAUtE,EAAAC,QACJoB,OAAc,GAAO,MACjC,GAAOX,EAAgB0D,KAAKE,EAAQ,K,QAMzB5D,EAAA0D,KAAb,SAAkBrE,G,2FAChB,gBAAMA,EAAOqE,Q,OAYb,OAZApE,EAAAC,OACMsE,EAAY,IAAI7D,EAAgBX,GAEhCyE,EAAe,SAAC9C,GAChB3B,IAAW2B,EAAE3B,SACfN,IAASgF,oBAAoB,aAAcD,GAE3CD,EAAUtC,gBAAgB,IAAI,EAAAvC,EAAAgF,qB,EAIlCjF,IAASsE,iBAAiB,aAAcS,GACxC,GAAOD,G,QAaH7D,EAAAiE,UAAAC,MAAN,W,mFACE,gBAAM/D,KAAKgE,qB,OAEX,OAFA7E,EAAAC,OACAY,KAAKd,OAAO0E,oBAAoB,cAAe5D,KAAKY,eACpD,GAAMZ,KAAKd,OAAO6E,S,cAAlB5E,EAAAC,O,YA2CFS,EAAAiE,UAAAG,eAAA,aA9IOpE,EAAAqE,YAAc5F,EAKduB,EAAAsE,KAAO5E,EAQPM,EAAAuE,OAAS,SACdC,GAEA,IAAIC,GAAe,EA6BnB,OApGJ,W,yFAC0B,gBAAM/E,K,OAC9B,OADMgF,EAAkBpF,EAAAC,QACJoB,OAAS,EAAG,GAAO+D,EAAgB,IACvC,GAAMxF,K,OACtB,SADgBI,EAAAC,OACD,I,OAoEboF,GAAuBC,MACrB,SAACvF,GACC,GAAKA,GAIE,IAAKoF,EAAc,CACxB,IAAMxB,EACwB,iBAArB5D,EAAO6D,WACV,EAAA3E,EAAA4E,sBAAqB9D,EAAO6D,gBAC5BE,EACNoB,EAASK,KAAK,CACZC,KAAM,MACNC,WAAY1F,EACZ4D,YAAWA,IAEbuB,EAASQ,U,OAbTR,EAASS,MACP,IAAI,EAAAjG,EAAAkG,4BAA2B,sC,IAerC,SAACD,GACCT,EAASS,MAAM,IAAI,EAAAjG,EAAAkG,4BAA2BD,EAAMpC,S,IAQjD,CACLsC,YALF,WACEV,GAAe,C,IAqGrBzE,C,CAxLA,CAA6CoF,EAAAjD,Q,ymFCX7CkD,EAAA,oBAAAC,IAAA,IAAArF,EAAAE,KACEA,KAAAoF,gBAAkB,IAClBpF,KAAAqF,oBAAsB,KACtBrF,KAAA8C,YAA8C,KA8E9C9C,KAAAsF,QAAU,IAAIC,EAAAC,IAuDdxF,KAAAyF,KAAO,SACLC,EACAC,EACAC,EACAC,EACA5E,EACA6E,G,YADA,IAAA7E,MAAe8E,EAAOC,MAAM,SAC5B,IAAAF,MAAA,CAA6BjH,EAAAoH,YAAYC,K,wFAEzC,GAAIjF,EAAKT,QAAU,IACjB,MAAM,IAAI,EAAA3B,EAAAC,gBACR,4CAA8CmC,EAAKT,OACnD,oBAIa,SAAMR,KAAKsB,SAC1ByE,EAAOI,OAAO,CACZJ,EAAO/E,KAAK,CAAC0E,EAAKC,EAAKC,EAAIC,IAC3BE,EAAO/E,KAAK,CAACC,EAAKT,SAClBS,M,OAKJ,GATMmF,EAAWjH,EAAAC,OAOXiH,EAAKD,EAASE,aAAaF,EAAS5F,OAAS,IAE9CsF,EAAWS,MAAK,SAACC,GAAM,OAAAA,IAAMH,C,IAChC,MAAM,IAAI,EAAAxH,EAAA4H,sBAAqBJ,GAGjC,SAAOD,G,QAuDTpG,KAAAyB,mBAAqB,SACnBiF,GADF,OAAAC,EAAA7G,OAAA,qB,uEAGE,GAAIE,KAAKgE,oBACP,MAAM,IAAI,EAAAnF,EAAA+H,wBACR,iFAKEC,EAA6B,IAAItI,SAAQ,SAACuI,GAC9CC,EAAcD,C,IAEhB9G,KAAKgE,oBAAsB6C,EACvBG,GAAsB,EACpBC,EAAUC,YAAW,WACzBF,GAAsB,EACtBtF,EAAKL,KAAK,e,GACTrB,KAAKqF,qB,iBAGM,O,sBAAA,GAAMqB,K,OAMlB,OANMS,EAAMhI,EAAAC,OAER4H,GACFhH,KAAKqB,KAAK,cAGZ,GAAO8F,G,cAEPC,aAAaH,GACTF,GAAaA,IACjB/G,KAAKgE,oBAAsB,K,6BAmB/BhE,KAAAqH,YAA6B,I,CAgC/B,OA/OElC,EAAArB,UAAAxC,SAAA,SAASgG,GACP,MAAM,IAAIC,MAAM,2B,EAQlBpC,EAAArB,UAAAG,eAAA,SAAeuD,GAAY,EAM3BrC,EAAArB,UAAAC,MAAA,WACE,OAAOxF,QAAQC,S,EAUjB2G,EAAArB,UAAA2D,GAAA,SAAGC,EAAmBC,GACpB3H,KAAKsF,QAAQmC,GAAGC,EAAWC,E,EAM7BxC,EAAArB,UAAA8D,IAAA,SAAIF,EAAmBC,GACrB3H,KAAKsF,QAAQuC,eAAeH,EAAWC,E,EAGzCxC,EAAArB,UAAAzC,KAAA,SAAKyG,GAAe,I,MAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAzH,OAAAwH,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,IAClB7I,EAAAa,KAAKsF,SAAQjE,KAAIiC,MAAAnE,EAAA+I,EAAA,CAACJ,GAAKK,EAAKJ,IAAI,G,EAMlC5C,EAAArB,UAAAsE,aAAA,WACEC,QAAQC,KACN,+F,EAOJnD,EAAArB,UAAAyE,mBAAA,SAAmBnD,GACjBpF,KAAKoF,gBAAkBA,C,EAMzBD,EAAArB,UAAA0E,+BAAA,SAA+BnD,GAC7BrF,KAAKqF,oBAAsBA,C,EAmDtBF,EAAAsD,OAAP,SACEC,EACAC,GAFF,IAAAjH,EAAA1B,KAIE,YAHA,IAAA0I,MAAA,KAGO,IAAInK,SAAQ,SAACC,EAASoK,GAC3B,IAAIC,GAAQ,EACNC,EAAMpH,EAAK0C,OAAO,CACtBM,KAAM,SAAC7D,GACLgI,GAAQ,EACJC,GAAKA,EAAI9D,cACT+D,GAAiB3B,aAAa2B,GAClCrH,EAAK6B,KAAK1C,EAAE+D,WAAY8D,GAAajE,KAAKjG,EAASoK,E,EAErD9D,MAAO,SAACjE,GACFkI,GAAiB3B,aAAa2B,GAClCH,EAAO/H,E,EAETgE,SAAU,WACJkE,GAAiB3B,aAAa2B,GAE7BF,GACHD,EACE,IAAI,EAAA/J,EAAAC,gBACF4C,EAAKsH,2BACL,iB,IAMJD,EAAkBJ,EACpBzB,YAAW,WACT4B,EAAI9D,cACJ4D,EACE,IAAI,EAAA/J,EAAAC,gBACF4C,EAAKuH,2BACL,iB,GAGHN,GACH,I,KAwCRxD,EAAArB,UAAAoF,sBAAA,SACEC,EACAC,EACAC,G,YAEA,IAAyB,IAAAC,EAAAC,EAAAH,GAAOI,EAAAF,EAAA5E,QAAA8E,EAAAC,KAAAD,EAAAF,EAAA5E,OAAE,CAA7B,IAAMgF,EAAUF,EAAAG,MACnBR,EAAKO,GAAc1J,KAAK4J,qBACtBF,EACAP,EAAKO,GACLP,EACAE,E,qGAONlE,EAAArB,UAAA8F,qBAAA,SACEF,EACAhD,EACAmD,EACAR,GAJF,IAAA3H,EAAA1B,KAME,OAAO,WAAO,QAAA+H,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAzH,OAAAwH,IAAAD,EAAAC,GAAAC,UAAAD,G,6FAGZ,GAFQX,EAAgBrH,KAAIqH,YAG1B,SAAO9I,QAAQqK,OACb,IAAI,EAAA/J,EAAAC,gBACF,+BAAiCuI,EAAc,IAC/C,qB,iBAQG,O,sBAFPrH,KAAKqH,YAAcqC,EACnB1J,KAAKiE,eAAeoF,GACb,GAAM3C,EAAEpD,MAAMuG,EAAK9B,IAA1B,gBAAO5I,EAAAC,Q,cAEPY,KAAKqH,YAAc,K,8BAKlBlC,EAAA8D,2BAA6B,mCAC7B9D,EAAA6D,2BAA6B,yBACtC7D,C,CA7SA,GAAqB2E,EAAA5E,C,0CCuCrB6E,E,iFA3EA,IAAMC,EAAa,CACjB/I,KAAMgJ,EAAOjE,MAAM,GACnBkE,WAAY,EACZC,SAAU,GAwEZJ,EAlEyB,SAAC9J,EAAiBI,GACzC,MAAO,CACL6B,WAAA,SAAWX,GACT,IAlBcoI,EACZS,EAiBEnJ,EAAOgJ,EAAO9D,OAAO,EAlBXwD,EAkBuBpI,EAAKf,OAjBxC4J,EAAIH,EAAOjE,MAAM,GACvBoE,EAAEC,cAAcV,EAAO,GAChBS,GAegD7I,IAC7C+I,EAAYjK,EAAa,EACzBkK,EAAWrK,KAAKsK,KAAKvJ,EAAKT,OAAS8J,GACzCrJ,EAAOgJ,EAAO9D,OAAO,CACnBlF,EACAgJ,EAAOjE,MAAMuE,EAAWD,EAAYrJ,EAAKT,OAAS,GAAGiK,KAAK,KAI5D,IAFA,IAAMxI,EAAmB,GAEhBE,EAAI,EAAGA,EAAIoI,EAAUpI,IAAK,CACjC,IAAMuI,EAAOT,EAAOjE,MAAM,GAC1B0E,EAAKL,cAAcpK,EAAS,GAC5ByK,EAAKC,WAhCD,EAgCiB,GACrBD,EAAKL,cAAclI,EAAG,GACtB,IAAMyI,EAAQ3J,EAAK4J,MAAM1I,EAAImI,GAAYnI,EAAI,GAAKmI,GAClDrI,EAAOf,KAAK+I,EAAO9D,OAAO,CAACuE,EAAME,I,CAGnC,OAAO3I,C,EAGTQ,eAAA,SAAeD,EAAkBoI,GAC3B,IAAAzL,EAAiCqD,GAAOwH,EAAtC/I,EAAI9B,EAAA8B,KAAEiJ,EAAU/K,EAAA+K,WAAEC,EAAQhL,EAAAgL,SAEhC,GAAIS,EAAMtE,aAAa,KAAOrG,EAC5B,MAAM,IAAIpB,EAAAC,eAAe,kBAAmB,kBAG9C,GAhDM,IAgDF8L,EAAME,UAAU,GAClB,MAAM,IAAIjM,EAAAC,eAAe,cAAe,cAG1C,GAAI8L,EAAMtE,aAAa,KAAO6D,EAC5B,MAAM,IAAItL,EAAAC,eAAe,mBAAoB,mBAG1C0D,IACH0H,EAAaU,EAAMtE,aAAa,IAGlC6D,IACA,IAAMY,EAAYH,EAAMC,MAAMrI,EAAM,EAAI,GAOxC,OANAvB,EAAOgJ,EAAO9D,OAAO,CAAClF,EAAM8J,KAEnBvK,OAAS0J,IAChBjJ,EAAOA,EAAK4J,MAAM,EAAGX,IAGhB,CACLjJ,KAAIA,EACJiJ,WAAUA,EACVC,SAAQA,E,EAIZ5H,iBAAA,SAAiBC,GACf,GAAIA,GAAOA,EAAI0H,aAAe1H,EAAIvB,KAAKT,OACrC,OAAOgC,EAAIvB,I,sJC/DP+J,EAAAC,E,8NAAAA,EAAAD,MAAa,KACvB,YACAC,EAAA,cACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,kBAGF,IAAMC,IAANC,EAAA,IACGH,EAAcI,MAAO,CACpBC,GAAIL,EAAcI,KAClBE,YAAa,cACbC,YAAa,EACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,OACZC,MAAO,CAAC,UAAY,WACpBC,aAAc,SAACC,GAAoC,W,GAErDV,EAACH,EAAcc,OAAQ,CACrBT,GAAIL,EAAcc,MAClBR,YAAa,gBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,OACZC,MAAO,CAAC,WACRC,aAAc,SAACG,G,MACb,OAAAxG,EAAAyG,GAAOC,GAAiC,QAA9BpJ,EAAA0C,EAAAyG,GAAOE,OAAOH,UAAgB,IAAAlJ,IAAI,GAAI,SAC5C,KACA,I,GAERsI,EAACH,EAAcmB,QAAS,CACtBd,GAAIL,EAAcmB,OAClBb,YAAa,qBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACQ,GAAqC,S,GAEtDjB,EAACH,EAAcqB,OAAQ,CACrBhB,GAAIL,EAAcqB,MAClBf,YAAa,gBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACC,GAAoC,W,EACnDS,cAAe,CACb,CACEC,YAAa,uCACbC,WAAY,uCACZC,UAAW,uCACXC,aAAc,0CAIpBvB,EAACH,EAAc2B,SAAU,CACvBtB,GAAIL,EAAc2B,QAClBrB,YAAa,kBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACC,GAAoC,W,EACnDS,cAAe,CACb,CACEC,YAAa,uCACbC,WAAY,uCACZC,UAAW,uCACXC,aAAc,0CAIrBvB,GAUKyB,GAPE5B,EAAcI,KACVJ,EAAcc,MACTd,EAAcmB,OACnBnB,EAAcqB,MACZrB,EAAc2B,QAGOE,OAAOC,OAAO5B,IAKpC6B,EAAoB,MA4BpBC,EAAuB,SAClCC,GAEA,IAAMC,EAASN,EAAYO,MAAK,SAACzN,GAAM,OAAAA,EAAE8L,qBAAuByB,C,IAChE,GAAIC,EAAQ,OAAOA,EACnB,IAAME,EAAKH,GAAgB,EAE3B,OADoBL,EAAYO,MAAK,SAACzN,GAAM,OAAAA,EAAE6L,cAAgB6B,C,KAW1DC,EAA8B,GAC9BC,EAAqD,GAE3D,IAAK,IAAMC,KAAMrC,EAAS,CACxB,IAAMsC,EAActC,EAAQqC,GACpBE,EAAkBD,EAAWlB,cACrC,GAAImB,EACF,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAcjN,OAAQkN,IAAK,CAC7C,IAAMC,EAAOF,EAAcC,GAC3BL,EAAkBnM,KAAKyM,EAAKpB,aAC5Be,EAAmBK,EAAKpB,aAAee,EACrCK,EAAKpB,YAAYqB,QAAO,KAAO,KAChCC,EAAA,CACC/K,YAAW0K,GACRG,E,wCC9KX,IAAAG,EAAAC,EAAA,S,wgBAyCAC,EAAAC,QAAiB,C,MACfC,E,MACAC,E,MACAC,E,IACAC,E,KACAC,E,MACAC,E,MACAC,E,MACAC,E,WACAC,E,QACAC,E,SACAC,E,aACAC,E,aACAC,E,KACAC,E,MACAC,E,GACAC,E,GACAC,E,GACAC,E,IACAC,E,IACAC,E,IACAC,E,IACAC,E,OACAC,E,WACAC,E,MACAC,E,UACAC,E,cACAC,E,cACAC,E,cACAC,E,WACAC,E,WACAC,E,QACAC,E,IACAC,E,IACAC,E,WACAC,E,cACAC,E,OACAC,E,OACAC,EACAC,GAAI1C,EAAA0C,GACJC,IAAK3C,EAAA2C,IACLC,OAAQ5C,EAAA6C,EACRC,oBAAqBC,EAAAD,oBACrBE,mBAAoBC,EAAAD,mBACpBE,oBAAqBD,EAAAC,oB,sCCtFvB,I,EAAAjD,EAAA,SAAMkD,0B,aAKN,MAAMT,GAHNvC,EAAUD,EAAOC,QAAU,IAGRuC,GAAK,GAClBC,EAAMxC,EAAQwC,IAAM,GACpBE,EAAI1C,EAAQ0C,EAAI,GACtB,IAAIO,EAAI,EAER,MAAMC,EAAc,CAACC,EAAMzH,EAAO0H,KAChC,MAAMC,EAAQJ,IACdK,EAAMH,EAAME,EAAO3H,GACnBgH,EAAES,GAAQE,EACVb,EAAIa,GAAS3H,EACb6G,EAAGc,GAAS,IAAIE,OAAO7H,EAAO0H,EAAW,SAAMpO,EAAU,EAS3DkO,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,UAMtCA,EAAY,uBAAwB,8BAKpCA,EAAY,cAAe,IAAIV,EAAIE,EAAEc,0BACdhB,EAAIE,EAAEc,0BACNhB,EAAIE,EAAEc,uBAE7BN,EAAY,mBAAoB,IAAIV,EAAIE,EAAEe,+BACdjB,EAAIE,EAAEe,+BACNjB,EAAIE,EAAEe,4BAKlCP,EAAY,uBAAwB,MAAMV,EAAIE,EAAEc,sBAC5ChB,EAAIE,EAAEgB,0BAEVR,EAAY,4BAA6B,MAAMV,EAAIE,EAAEe,2BACjDjB,EAAIE,EAAEgB,0BAMVR,EAAY,aAAc,QAAQV,EAAIE,EAAEiB,8BAC/BnB,EAAIE,EAAEiB,6BAEfT,EAAY,kBAAmB,SAASV,EAAIE,EAAEkB,mCACrCpB,EAAIE,EAAEkB,kCAKfV,EAAY,kBAAmB,iBAM/BA,EAAY,QAAS,UAAUV,EAAIE,EAAEmB,yBAC5BrB,EAAIE,EAAEmB,wBAWfX,EAAY,YAAa,KAAKV,EAAIE,EAAEoB,eACjCtB,EAAIE,EAAEqB,eACPvB,EAAIE,EAAEsB,WAERd,EAAY,OAAQ,IAAIV,EAAIE,EAAEuB,eAK9Bf,EAAY,aAAc,WAAWV,EAAIE,EAAEwB,oBACxC1B,EAAIE,EAAEyB,oBACP3B,EAAIE,EAAEsB,WAERd,EAAY,QAAS,IAAIV,EAAIE,EAAE0B,gBAE/BlB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAyB,GAAGV,EAAIE,EAAEe,mCAC9CP,EAAY,mBAAoB,GAAGV,EAAIE,EAAEc,8BAEzCN,EAAY,cAAe,YAAYV,EAAIE,EAAE2B,4BAChB7B,EAAIE,EAAE2B,4BACN7B,EAAIE,EAAE2B,wBACV7B,EAAIE,EAAEqB,gBACVvB,EAAIE,EAAEsB,eAG3Bd,EAAY,mBAAoB,YAAYV,EAAIE,EAAE4B,iCAChB9B,EAAIE,EAAE4B,iCACN9B,EAAIE,EAAE4B,6BACV9B,EAAIE,EAAEyB,qBACV3B,EAAIE,EAAEsB,eAGhCd,EAAY,SAAU,IAAIV,EAAIE,EAAE6B,YAAY/B,EAAIE,EAAE8B,iBAClDtB,EAAY,cAAe,IAAIV,EAAIE,EAAE6B,YAAY/B,EAAIE,EAAE+B,sBAIvDvB,EAAY,SAAU,oBACEwB,mBACIA,qBACAA,qBAE5BxB,EAAY,YAAaV,EAAIE,EAAEiC,SAAS,GAIxCzB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASV,EAAIE,EAAEkC,kBAAkB,GAC1D5E,EAAQ6E,iBAAmB,MAE3B3B,EAAY,QAAS,IAAIV,EAAIE,EAAEkC,aAAapC,EAAIE,EAAE8B,iBAClDtB,EAAY,aAAc,IAAIV,EAAIE,EAAEkC,aAAapC,EAAIE,EAAE+B,sBAIvDvB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASV,EAAIE,EAAEoC,kBAAkB,GAC1D9E,EAAQ+E,iBAAmB,MAE3B7B,EAAY,QAAS,IAAIV,EAAIE,EAAEoC,aAAatC,EAAIE,EAAE8B,iBAClDtB,EAAY,aAAc,IAAIV,EAAIE,EAAEoC,aAAatC,EAAIE,EAAE+B,sBAGvDvB,EAAY,kBAAmB,IAAIV,EAAIE,EAAE6B,aAAa/B,EAAIE,EAAE0B,oBAC5DlB,EAAY,aAAc,IAAIV,EAAIE,EAAE6B,aAAa/B,EAAIE,EAAEuB,mBAIvDf,EAAY,iBAAkB,SAASV,EAAIE,EAAE6B,aACrC/B,EAAIE,EAAE0B,eAAe5B,EAAIE,EAAE8B,iBAAiB,GACpDxE,EAAQgF,sBAAwB,SAMhC9B,EAAY,cAAe,SAASV,EAAIE,EAAE8B,0BAEnBhC,EAAIE,EAAE8B,sBAG7BtB,EAAY,mBAAoB,SAASV,EAAIE,EAAE+B,+BAEnBjC,EAAIE,EAAE+B,2BAIlCvB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,6BACpBA,EAAY,UAAW,8B,sCCnLvB,MAGM+B,EAAmBC,OAAOC,kBACL,iBAK3BpF,EAAAC,QAAiB,C,oBATW,Q,WAET,I,iBAUjBiF,E,0BALgC,G,sCCTlC,IAAAG,EAAAtF,EAAA,eAAMuF,GACe,iBAAZD,GACPA,EAAQE,IAIN,QAEJvF,EAAAC,QAAiBqF,C,sCCRjB,IAAA/B,EAAAxD,EAAA,S,eACM8C,EAAA2C,W,EAAA3C,EAAAuC,iB,eACAtF,EAAA0C,G,EAAA1C,EAAA6C,E,0BAGAG,mBACN,MAAM2C,EACJC,YAAaC,EAASC,GAGpB,GAFAA,EAAUC,EAAaD,GAEnBD,aAAmBF,EAAQ,CAC7B,GAAIE,EAAQG,UAAYF,EAAQE,OAC5BH,EAAQI,sBAAwBH,EAAQG,kBAC1C,OAAOJ,EAEPA,EAAUA,EAAQA,O,MAEf,GAAuB,iBAAZA,EAChB,MAAM,IAAIK,UAAU,oBAAoBL,KAG1C,GAAIA,EAAQnT,OAAMyT,EAChB,MAAM,IAAID,UACR,0BAAwBC,gBAI5B1C,EAAM,SAAUoC,EAASC,GACzB5T,KAAK4T,QAAUA,EACf5T,KAAK8T,QAAUF,EAAQE,MAGvB9T,KAAK+T,oBAAsBH,EAAQG,kBAEnC,MAAMG,EAAIP,EAAQQ,OAAOC,MAAMR,EAAQE,MAAQO,EAAGC,EAAEC,OAASF,EAAGC,EAAEE,OAElE,IAAKN,EACH,MAAM,IAAIF,UAAU,oBAAoBL,KAU1C,GAPA3T,KAAKyU,IAAMd,EAGX3T,KAAK0U,OAASR,EAAE,GAChBlU,KAAK2U,OAAST,EAAE,GAChBlU,KAAK4U,OAASV,EAAE,GAEZlU,KAAK0U,MAAKG,GAAuB7U,KAAK0U,MAAQ,EAChD,MAAM,IAAIV,UAAU,yBAGtB,GAAIhU,KAAK2U,MAAKE,GAAuB7U,KAAK2U,MAAQ,EAChD,MAAM,IAAIX,UAAU,yBAGtB,GAAIhU,KAAK4U,MAAKC,GAAuB7U,KAAK4U,MAAQ,EAChD,MAAM,IAAIZ,UAAU,yBAIjBE,EAAE,GAGLlU,KAAK8U,WAAaZ,EAAE,GAAGa,MAAM,KAAKC,KAAK3J,IACrC,GAAI,WAAW4J,KAAK5J,GAAK,CACvB,MAAM6J,GAAO7J,EACb,GAAI6J,GAAO,GAAKA,EAAGL,EACjB,OAAOK,C,CAGX,OAAO7J,CAAE,IATXrL,KAAK8U,WAAa,GAapB9U,KAAKmV,MAAQjB,EAAE,GAAKA,EAAE,GAAGa,MAAM,KAAO,GACtC/U,KAAKoV,Q,CAGPA,SAKE,OAJApV,KAAK2T,QAAU,GAAG3T,KAAK0U,SAAS1U,KAAK2U,SAAS3U,KAAK4U,QAC/C5U,KAAK8U,WAAWtU,SAClBR,KAAK2T,SAAW,IAAI3T,KAAK8U,WAAWO,KAAK,QAEpCrV,KAAK2T,O,CAGd9R,WACE,OAAO7B,KAAK2T,O,CAGd2B,QAASC,GAEP,GADAhE,EAAM,iBAAkBvR,KAAK2T,QAAS3T,KAAK4T,QAAS2B,KAC9CA,aAAiB9B,GAAS,CAC9B,GAAqB,iBAAV8B,GAAsBA,IAAUvV,KAAK2T,QAC9C,OAAO,EAET4B,EAAQ,IAAI9B,EAAO8B,EAAOvV,KAAK4T,Q,CAGjC,OAAI2B,EAAM5B,UAAY3T,KAAK2T,QAClB,EAGF3T,KAAKwV,YAAYD,IAAUvV,KAAKyV,WAAWF,E,CAGpDC,YAAaD,GAKX,OAJMA,aAAiB9B,IACrB8B,EAAQ,IAAI9B,EAAO8B,EAAOvV,KAAK4T,UAI/B8B,EAAmB1V,KAAK0U,MAAOa,EAAMb,QACrCgB,EAAmB1V,KAAK2U,MAAOY,EAAMZ,QACrCe,EAAmB1V,KAAK4U,MAAOW,EAAMX,M,CAIzCa,WAAYF,GAMV,GALMA,aAAiB9B,IACrB8B,EAAQ,IAAI9B,EAAO8B,EAAOvV,KAAK4T,UAI7B5T,KAAK8U,WAAWtU,SAAW+U,EAAMT,WAAWtU,OAC9C,OAAO,EACF,IAAKR,KAAK8U,WAAWtU,QAAU+U,EAAMT,WAAWtU,OACrD,OAAO,EACF,IAAKR,KAAK8U,WAAWtU,SAAW+U,EAAMT,WAAWtU,OACtD,OAAO,EAGT,IAAI2B,EAAI,EACR,EAAG,CACD,MAAMwT,EAAI3V,KAAK8U,WAAW3S,GACpBiI,EAAImL,EAAMT,WAAW3S,GAE3B,GADAoP,EAAM,qBAAsBpP,EAAGwT,EAAGvL,QACxBnH,IAAN0S,QAAyB1S,IAANmH,EACrB,OAAO,EACF,QAAUnH,IAANmH,EACT,OAAO,EACF,QAAUnH,IAAN0S,EACT,OAAO,EACF,GAAIA,IAAMvL,EAGf,OAAOsL,EAAmBC,EAAGvL,E,SAEtBjI,E,CAGbyT,aAAcL,GACNA,aAAiB9B,IACrB8B,EAAQ,IAAI9B,EAAO8B,EAAOvV,KAAK4T,UAGjC,IAAIzR,EAAI,EACR,EAAG,CACD,MAAMwT,EAAI3V,KAAKmV,MAAMhT,GACfiI,EAAImL,EAAMJ,MAAMhT,GAEtB,GADAoP,EAAM,qBAAsBpP,EAAGwT,EAAGvL,QACxBnH,IAAN0S,QAAyB1S,IAANmH,EACrB,OAAO,EACF,QAAUnH,IAANmH,EACT,OAAO,EACF,QAAUnH,IAAN0S,EACT,OAAO,EACF,GAAIA,IAAMvL,EAGf,OAAOsL,EAAmBC,EAAGvL,E,SAEtBjI,E,CAKb0T,IAAKC,EAASC,GACZ,OAAQD,GACN,IAAK,WACH9V,KAAK8U,WAAWtU,OAAS,EACzBR,KAAK4U,MAAQ,EACb5U,KAAK2U,MAAQ,EACb3U,KAAK0U,QACL1U,KAAK6V,IAAI,MAAOE,GAChB,MACF,IAAK,WACH/V,KAAK8U,WAAWtU,OAAS,EACzBR,KAAK4U,MAAQ,EACb5U,KAAK2U,QACL3U,KAAK6V,IAAI,MAAOE,GAChB,MACF,IAAK,WAIH/V,KAAK8U,WAAWtU,OAAS,EACzBR,KAAK6V,IAAI,QAASE,GAClB/V,KAAK6V,IAAI,MAAOE,GAChB,MAGF,IAAK,aAC4B,IAA3B/V,KAAK8U,WAAWtU,QAClBR,KAAK6V,IAAI,QAASE,GAEpB/V,KAAK6V,IAAI,MAAOE,GAChB,MAEF,IAAK,QAMc,IAAf/V,KAAK2U,OACU,IAAf3U,KAAK4U,OACsB,IAA3B5U,KAAK8U,WAAWtU,QAEhBR,KAAK0U,QAEP1U,KAAK2U,MAAQ,EACb3U,KAAK4U,MAAQ,EACb5U,KAAK8U,WAAa,GAClB,MACF,IAAK,QAKgB,IAAf9U,KAAK4U,OAA0C,IAA3B5U,KAAK8U,WAAWtU,QACtCR,KAAK2U,QAEP3U,KAAK4U,MAAQ,EACb5U,KAAK8U,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3B9U,KAAK8U,WAAWtU,QAClBR,KAAK4U,QAEP5U,KAAK8U,WAAa,GAClB,MAGF,IAAK,MACH,GAA+B,IAA3B9U,KAAK8U,WAAWtU,OAClBR,KAAK8U,WAAa,CAAC,OACd,CACL,IAAI3S,EAAInC,KAAK8U,WAAWtU,OACxB,OAAS2B,GAAK,GACsB,iBAAvBnC,KAAK8U,WAAW3S,KACzBnC,KAAK8U,WAAW3S,KAChBA,GAAI,IAGE,IAANA,GAEFnC,KAAK8U,WAAW5T,KAAK,E,CAGrB6U,IAGyD,IAAvDL,EAAmB1V,KAAK8U,WAAW,GAAIiB,GACrCC,MAAMhW,KAAK8U,WAAW,MACxB9U,KAAK8U,WAAa,CAACiB,EAAY,IAGjC/V,KAAK8U,WAAa,CAACiB,EAAY,IAGnC,MAEF,QACE,MAAM,IAAIxO,MAAM,+BAA+BuO,KAInD,OAFA9V,KAAKoV,SACLpV,KAAKyU,IAAMzU,KAAK2T,QACT3T,I,EAIXgO,EAAAC,QAAiBwF,C,sCC5RjB,MAAMwC,EAAO,CAAC,oBAAqB,QAAS,OAQ5CjI,EAAAC,QAPqB2F,GAClBA,EACoB,iBAAZA,EAAuB,CAAEE,OAAO,GACvCmC,EAAKxW,QAAOyW,GAAKtC,EAAQsC,KAAIC,QAAO,CAACC,EAAGF,KACxCE,EAAEF,IAAK,EACAE,IACN,IALQ,E,sCCJb,MAAMC,EAAO,WACPC,EAAqB,CAACX,EAAGvL,KAC7B,MAAMmM,EAAOF,EAAQpB,KAAKU,GACpBa,EAAOH,EAAQpB,KAAK7K,GAO1B,OALImM,GAAQC,IACVb,GAAKA,EACLvL,GAAKA,GAGAuL,IAAMvL,EAAI,EACbmM,IAAUC,GAAQ,EAClBA,IAAUD,EAAQ,EAClBZ,EAAIvL,GAAI,EACR,CAAC,EAKP4D,EAAAC,QAAiB,C,mBACfqI,E,oBAH0B,CAACX,EAAGvL,IAAMkM,EAAmBlM,EAAGuL,G,sCCjB5D,I,EAAA5H,EAAA,SAAMyF,W,eACA1F,EAAA0C,G,EAAA1C,EAAA6C,E,0BA+BN3C,EAAAC,QA3Bc,CAAC0F,EAASC,KAGtB,GAFAA,EAAUC,EAAaD,GAEnBD,aAAmBpD,EACrB,OAAOoD,EAGT,GAAuB,iBAAZA,EACT,OAAO,KAGT,GAAIA,EAAQnT,OAAMiW,EAChB,OAAO,KAIT,KADU7C,EAAQE,MAAQ4C,EAAGC,EAAEpC,OAASmC,EAAGC,EAAEnC,OACtCS,KAAKtB,GACV,OAAO,KAGT,IACE,OAAO,IAAIpD,EAAOoD,EAASC,E,CAC3B,MAAOgD,GACP,OAAO,I,wCC5BX,IAAA1I,EAAAH,EAAA,SAKAC,EAAAC,QAJc,CAAC0F,EAASC,KACtB,MAAMiD,EAAI3I,EAAMyF,EAASC,GACzB,OAAOiD,EAAIA,EAAElD,QAAU,IAAI,C,sCCH7B,IAAAzF,EAAAH,EAAA,SAKAC,EAAAC,QAJc,CAAC0F,EAASC,KACtB,MAAMpN,EAAI0H,EAAMyF,EAAQQ,OAAOvG,QAAO,SAAW,IAAKgG,GACtD,OAAOpN,EAAIA,EAAEmN,QAAU,IAAI,C,sCCH7B,IAAApD,EAAAxC,EAAA,SAiBAC,EAAAC,QAfY,CAAC0F,EAASmC,EAASlC,EAASmC,KACb,iBAAbnC,IACVmC,EAAanC,EACbA,OAAU3Q,GAGZ,IACE,OAAO,IAAIsN,EACToD,aAAmBpD,EAASoD,EAAQA,QAAUA,EAC9CC,GACAiC,IAAIC,EAASC,GAAYpC,O,CAC3B,MAAOiD,GACP,OAAO,I,wCCdX,IAAA1I,EAAAH,EAAA,S,aAsBAC,EAAAC,QAnBa,CAAC6I,EAAUC,KACtB,GAAI5H,EAAG2H,EAAUC,GACf,OAAO,KACF,CACL,MAAMC,EAAK9I,EAAM4I,GACXG,EAAK/I,EAAM6I,GACXG,EAASF,EAAGlC,WAAWtU,QAAUyW,EAAGnC,WAAWtU,OAC/C2W,EAASD,EAAS,MAAQ,GAC1BE,EAAgBF,EAAS,aAAe,GAC9C,IAAK,MAAMG,KAAOL,EAChB,IAAY,UAARK,GAA2B,UAARA,GAA2B,UAARA,IACpCL,EAAGK,KAASJ,EAAGI,GACjB,OAAOF,EAASE,EAItB,OAAOD,C,wCCnBX,IAAAzI,EAAAZ,EAAA,SAEAC,EAAAC,QADW,CAAC0H,EAAGvL,EAAG0J,IAAmC,IAAzBnF,EAAQgH,EAAGvL,EAAG0J,E,sCCD1C,IAAAvD,EAAAxC,EAAA,SAIAC,EAAAC,QAHgB,CAAC0H,EAAGvL,EAAG0J,IACrB,IAAIvD,EAAOoF,EAAG7B,GAAOwB,QAAQ,IAAI/E,EAAOnG,EAAG0J,G,sCCF7C,IAAAvD,EAAAxC,EAAA,SAEAC,EAAAC,QADc,CAAC0H,EAAG7B,IAAU,IAAIvD,EAAOoF,EAAG7B,GAAOY,K,sCCDjD,IAAAnE,EAAAxC,EAAA,SAEAC,EAAAC,QADc,CAAC0H,EAAG7B,IAAU,IAAIvD,EAAOoF,EAAG7B,GAAOa,K,sCCDjD,IAAApE,EAAAxC,EAAA,SAEAC,EAAAC,QADc,CAAC0H,EAAG7B,IAAU,IAAIvD,EAAOoF,EAAG7B,GAAOc,K,sCCDjD,IAAA1G,EAAAH,EAAA,SAKAC,EAAAC,QAJmB,CAAC0F,EAASC,KAC3B,MAAM0D,EAASpJ,EAAMyF,EAASC,GAC9B,OAAO0D,GAAWA,EAAOxC,WAAWtU,OAAU8W,EAAOxC,WAAa,IAAI,C,sCCHxE,IAAAnG,EAAAZ,EAAA,SAEAC,EAAAC,QADiB,CAAC0H,EAAGvL,EAAG0J,IAAUnF,EAAQvE,EAAGuL,EAAG7B,E,sCCDhD,IAAAnF,EAAAZ,EAAA,SAEAC,EAAAC,QADqB,CAAC0H,EAAGvL,IAAMuE,EAAQgH,EAAGvL,GAAG,E,sCCD7C,IAAAmG,EAAAxC,EAAA,SAMAC,EAAAC,QALqB,CAAC0H,EAAGvL,EAAG0J,KAC1B,MAAMyD,EAAW,IAAIhH,EAAOoF,EAAG7B,GACzB0D,EAAW,IAAIjH,EAAOnG,EAAG0J,GAC/B,OAAOyD,EAASjC,QAAQkC,IAAaD,EAAS3B,aAAa4B,EAAS,C,sCCJtE,IAAA1I,EAAAf,EAAA,SAEAC,EAAAC,QADa,CAAC9J,EAAM2P,IAAU3P,EAAKsT,MAAK,CAAC9B,EAAGvL,IAAM0E,EAAa6G,EAAGvL,EAAG0J,I,sCCDrE,IAAAhF,EAAAf,EAAA,SAEAC,EAAAC,QADc,CAAC9J,EAAM2P,IAAU3P,EAAKsT,MAAK,CAAC9B,EAAGvL,IAAM0E,EAAa1E,EAAGuL,EAAG7B,I,sCCDtE,IAAAnF,EAAAZ,EAAA,SAEAC,EAAAC,QADW,CAAC0H,EAAGvL,EAAG0J,IAAUnF,EAAQgH,EAAGvL,EAAG0J,GAAS,C,sCCDnD,IAAAnF,EAAAZ,EAAA,SAEAC,EAAAC,QADW,CAAC0H,EAAGvL,EAAG0J,IAAUnF,EAAQgH,EAAGvL,EAAG0J,GAAS,C,sCCDnD,IAAAnF,EAAAZ,EAAA,SAEAC,EAAAC,QADY,CAAC0H,EAAGvL,EAAG0J,IAAmC,IAAzBnF,EAAQgH,EAAGvL,EAAG0J,E,sCCD3C,IAAAnF,EAAAZ,EAAA,SAEAC,EAAAC,QADY,CAAC0H,EAAGvL,EAAG0J,IAAUnF,EAAQgH,EAAGvL,EAAG0J,IAAU,C,sCCDrD,IAAAnF,EAAAZ,EAAA,SAEAC,EAAAC,QADY,CAAC0H,EAAGvL,EAAG0J,IAAUnF,EAAQgH,EAAGvL,EAAG0J,IAAU,C,sCCDrD,IAAA3E,EAAApB,EAAA,S,iEAmDAC,EAAAC,QA5CY,CAAC0H,EAAG+B,EAAItN,EAAG0J,KACrB,OAAQ4D,GACN,IAAK,MAOH,MANiB,iBAAN/B,IACTA,EAAIA,EAAEhC,SAES,iBAANvJ,IACTA,EAAIA,EAAEuJ,SAEDgC,IAAMvL,EAEf,IAAK,MAOH,MANiB,iBAANuL,IACTA,EAAIA,EAAEhC,SAES,iBAANvJ,IACTA,EAAIA,EAAEuJ,SAEDgC,IAAMvL,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAO+E,EAAGwG,EAAGvL,EAAG0J,GAElB,IAAK,KACH,OAAO1E,EAAIuG,EAAGvL,EAAG0J,GAEnB,IAAK,IACH,OAAO7E,EAAG0G,EAAGvL,EAAG0J,GAElB,IAAK,KACH,OAAOzE,EAAIsG,EAAGvL,EAAG0J,GAEnB,IAAK,IACH,OAAO5E,EAAGyG,EAAGvL,EAAG0J,GAElB,IAAK,KACH,OAAOxE,EAAIqG,EAAGvL,EAAG0J,GAEnB,QACE,MAAM,IAAIE,UAAU,qBAAqB0D,K,uCChD/C,IAAAnH,EAAAxC,EAAA,S,4BAEMD,EAAA0C,G,EAAA1C,EAAA6C,EAiDN3C,EAAAC,QA/Ce,CAAC0F,EAASC,KACvB,GAAID,aAAmBpD,EACrB,OAAOoD,EAOT,GAJuB,iBAAZA,IACTA,EAAUgE,OAAOhE,IAGI,iBAAZA,EACT,OAAO,KAKT,IAAIS,EAAQ,KACZ,IAHAR,EAAUA,GAAW,IAGRgE,IAEN,CASL,IAAIlT,EACJ,MAAQA,EAAOmT,EAAGC,EAAEC,WAAWC,KAAKrE,OAC9BS,GAASA,EAAM9C,MAAQ8C,EAAM,GAAG5T,SAAWmT,EAAQnT,SAElD4T,GACC1P,EAAK4M,MAAQ5M,EAAK,GAAGlE,SAAW4T,EAAM9C,MAAQ8C,EAAM,GAAG5T,SAC3D4T,EAAQ1P,GAEVmT,EAAGC,EAAEC,WAAWE,UAAYvT,EAAK4M,MAAQ5M,EAAK,GAAGlE,OAASkE,EAAK,GAAGlE,OAGpEqX,EAAGC,EAAEC,WAAWE,WAAY,C,MArB5B7D,EAAQT,EAAQS,MAAMyD,EAAGC,EAAElF,SAwB7B,OAAc,OAAVwB,EACK,KAGFlG,EAAM,GAAGkG,EAAM,MAAMA,EAAM,IAAM,OAAOA,EAAM,IAAM,MAAOR,EAAQ,C,sCCjD5E,MAAMsE,EAAMC,OAAO,cAEnB,MAAMC,EACOC,iBACT,OAAOH,C,CAGTxE,YAAa4E,EAAM1E,GAGjB,GAFAA,EAAUC,EAAaD,GAEnB0E,aAAgBF,EAAY,CAC9B,GAAIE,EAAKxE,UAAYF,EAAQE,MAC3B,OAAOwE,EAEPA,EAAOA,EAAK3O,K,CAIhB4H,EAAM,aAAc+G,EAAM1E,GAC1B5T,KAAK4T,QAAUA,EACf5T,KAAK8T,QAAUF,EAAQE,MACvB9T,KAAKuY,MAAMD,GAEPtY,KAAKwY,SAAWN,EAClBlY,KAAK2J,MAAQ,GAEb3J,KAAK2J,MAAQ3J,KAAKyY,SAAWzY,KAAKwY,OAAO7E,QAG3CpC,EAAM,OAAQvR,K,CAGhBuY,MAAOD,GACL,MAAMxR,EAAI9G,KAAK4T,QAAQE,MAAQ4E,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YACtD3E,EAAIoE,EAAKlE,MAAMtN,GAErB,IAAKoN,EACH,MAAM,IAAIF,UAAU,uBAAuBsE,KAG7CtY,KAAKyY,cAAoBxV,IAATiR,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlBlU,KAAKyY,WACPzY,KAAKyY,SAAW,IAIbvE,EAAE,GAGLlU,KAAKwY,OAAS,IAAIjI,EAAO2D,EAAE,GAAIlU,KAAK4T,QAAQE,OAF5C9T,KAAKwY,OAASN,C,CAMlBrW,WACE,OAAO7B,KAAK2J,K,CAGdsL,KAAMtB,GAGJ,GAFApC,EAAM,kBAAmBoC,EAAS3T,KAAK4T,QAAQE,OAE3C9T,KAAKwY,SAAWN,GAAOvE,IAAYuE,EACrC,OAAO,EAGT,GAAuB,iBAAZvE,EACT,IACEA,EAAU,IAAIpD,EAAOoD,EAAS3T,KAAK4T,Q,CACnC,MAAOgD,GACP,OAAO,C,CAIX,OAAOrH,EAAIoE,EAAS3T,KAAKyY,SAAUzY,KAAKwY,OAAQxY,KAAK4T,Q,CAGvDkF,WAAYR,EAAM1E,GAChB,KAAM0E,aAAgBF,GACpB,MAAM,IAAIpE,UAAU,4BAUtB,GAPKJ,GAA8B,iBAAZA,IACrBA,EAAU,CACRE,QAASF,EACTG,mBAAmB,IAID,KAAlB/T,KAAKyY,SACP,MAAmB,KAAfzY,KAAK2J,OAGF,IAAI+F,EAAM4I,EAAK3O,MAAOiK,GAASqB,KAAKjV,KAAK2J,OAC3C,GAAsB,KAAlB2O,EAAKG,SACd,MAAmB,KAAfH,EAAK3O,OAGF,IAAI+F,EAAM1P,KAAK2J,MAAOiK,GAASqB,KAAKqD,EAAKE,QAGlD,MAAMO,IACe,OAAlB/Y,KAAKyY,UAAuC,MAAlBzY,KAAKyY,UACb,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAC5BO,IACe,OAAlBhZ,KAAKyY,UAAuC,MAAlBzY,KAAKyY,UACb,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAC5BQ,EAAajZ,KAAKwY,OAAO7E,UAAY2E,EAAKE,OAAO7E,QACjDuF,IACe,OAAlBlZ,KAAKyY,UAAuC,OAAlBzY,KAAKyY,UACb,OAAlBH,EAAKG,UAAuC,OAAlBH,EAAKG,UAC5BU,EACJ5J,EAAIvP,KAAKwY,OAAQ,IAAKF,EAAKE,OAAQ5E,KAChB,OAAlB5T,KAAKyY,UAAuC,MAAlBzY,KAAKyY,YACX,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAC9BW,EACJ7J,EAAIvP,KAAKwY,OAAQ,IAAKF,EAAKE,OAAQ5E,KAChB,OAAlB5T,KAAKyY,UAAuC,MAAlBzY,KAAKyY,YACX,OAAlBH,EAAKG,UAAuC,MAAlBH,EAAKG,UAEpC,OACEM,GACAC,GACCC,GAAcC,GACfC,GACAC,C,EAKNpL,EAAAC,QAAiBmK,E,gCAGXtK,EAAA0C,G,EAAA1C,EAAA6C,E,yFClIN,MAAM0I,EACJ3F,YAAa4F,EAAO1F,GAGlB,GAFAA,EAAUC,EAAaD,GAEnB0F,aAAiBD,EACnB,OACEC,EAAMxF,UAAYF,EAAQE,OAC1BwF,EAAMvF,sBAAwBH,EAAQG,kBAE/BuF,EAEA,IAAID,EAAMC,EAAM7E,IAAKb,GAIhC,GAAI0F,aAAiB7J,EAKnB,OAHAzP,KAAKyU,IAAM6E,EAAM3P,MACjB3J,KAAKuZ,IAAM,CAAC,CAACD,IACbtZ,KAAKoV,SACEpV,KAkBT,GAfAA,KAAK4T,QAAUA,EACf5T,KAAK8T,QAAUF,EAAQE,MACvB9T,KAAK+T,oBAAsBH,EAAQG,kBAGnC/T,KAAKyU,IAAM6E,EACXtZ,KAAKuZ,IAAMD,EACRvE,MAAM,MAENC,KAAIlO,GAAK9G,KAAKwZ,WAAW1S,EAAEqN,UAI3B1U,QAAOga,GAAKA,EAAEjZ,UAEZR,KAAKuZ,IAAI/Y,OACZ,MAAM,IAAIwT,UAAU,yBAAyBsF,KAI/C,GAAItZ,KAAKuZ,IAAI/Y,OAAS,EAAG,CAEvB,MAAMkZ,EAAQ1Z,KAAKuZ,IAAI,GAEvB,GADAvZ,KAAKuZ,IAAMvZ,KAAKuZ,IAAI9Z,QAAOga,IAAME,EAAUF,EAAE,MACrB,IAApBzZ,KAAKuZ,IAAI/Y,OACXR,KAAKuZ,IAAM,CAACG,QACP,GAAI1Z,KAAKuZ,IAAI/Y,OAAS,EAE3B,IAAK,MAAMiZ,KAAKzZ,KAAKuZ,IACnB,GAAiB,IAAbE,EAAEjZ,QAAgBoZ,EAAMH,EAAE,IAAK,CACjCzZ,KAAKuZ,IAAM,CAACE,GACZ,K,EAMRzZ,KAAKoV,Q,CAGPA,SAOE,OANApV,KAAKsZ,MAAQtZ,KAAKuZ,IACfvE,KAAK6E,GACGA,EAAMxE,KAAK,KAAKlB,SAExBkB,KAAK,MACLlB,OACInU,KAAKsZ,K,CAGdzX,WACE,OAAO7B,KAAKsZ,K,CAGdE,WAAYF,GACVA,EAAQA,EAAMnF,OAId,MACM2F,EAAU,cADCjN,OAAOkN,KAAK/Z,KAAK4T,SAASyB,KAAK,QACNiE,IACpCU,EAASC,EAAMC,IAAIJ,GACzB,GAAIE,EACF,OAAOA,EAGT,MAAMlG,EAAQ9T,KAAK4T,QAAQE,MAErBqG,EAAKrG,EAAQsG,EAAGC,EAAEC,kBAAoBF,EAAGC,EAAEE,aACjDjB,EAAQA,EAAM1L,QAAQuM,EAAIK,EAAcxa,KAAK4T,QAAQG,oBACrDxC,EAAM,iBAAkB+H,GAExBA,EAAQA,EAAM1L,QAAQwM,EAAGC,EAAEI,gBAAeC,GAC1CnJ,EAAM,kBAAmB+H,GAczB,IAAIqB,GALJrB,GAHAA,GAHAA,EAAQA,EAAM1L,QAAQwM,EAAGC,EAAEO,WAAUC,IAGvBjN,QAAQwM,EAAGC,EAAES,WAAUC,IAGvBhG,MAAK,OAAQM,KAAK,MAM7BN,MAAM,KACNC,KAAIsD,GAAQ0C,EAAgB1C,EAAMtY,KAAK4T,WACvCyB,KAAK,KACLN,MAAK,OAELC,KAAIsD,GAAQ2C,EAAY3C,EAAMtY,KAAK4T,WAElCE,IAEF6G,EAAYA,EAAUlb,QAAO6Y,IAC3B/G,EAAM,uBAAwB+G,EAAMtY,KAAK4T,WAChC0E,EAAKlE,MAAMgG,EAAGC,EAAEzB,sBAG7BrH,EAAM,aAAcoJ,GAKpB,MAAMO,EAAW,IAAIC,IACfC,EAAcT,EAAU3F,KAAIsD,GAAQ,IAAI7I,EAAW6I,EAAMtY,KAAK4T,WACpE,IAAK,MAAMyH,KAAQD,EAAa,CAC9B,GAAIzB,EAAU0B,GACZ,MAAO,CAACA,GAEVH,EAAS3B,IAAI8B,EAAK1R,MAAO0R,E,CAEvBH,EAASI,KAAO,GAAKJ,EAASK,IAAI,KACpCL,EAASM,OAAO,IAGlB,MAAMlZ,EAAS,IAAI4Y,EAASpO,UAE5B,OADAmN,EAAMV,IAAIO,EAASxX,GACZA,C,CAGTwW,WAAYQ,EAAO1F,GACjB,KAAM0F,aAAiBD,GACrB,MAAM,IAAIrF,UAAU,uBAGtB,OAAOhU,KAAKuZ,IAAIhT,MAAMkV,GAElBC,EAAcD,EAAiB7H,IAC/B0F,EAAMC,IAAIhT,MAAMoV,GAEZD,EAAcC,EAAkB/H,IAChC6H,EAAgBG,OAAOC,GACdF,EAAiBC,OAAOE,GACtBD,EAAe/C,WAAWgD,EAAiBlI,U,CAUhEqB,KAAMtB,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,iBAAZA,EACT,IACEA,EAAU,IAAIpD,EAAOoD,EAAS3T,KAAK4T,Q,CACnC,MAAOgD,GACP,OAAO,C,CAIX,IAAK,IAAIzU,EAAI,EAAGA,EAAInC,KAAKuZ,IAAI/Y,OAAQ2B,IACnC,GAAI4Z,EAAQ/b,KAAKuZ,IAAIpX,GAAIwR,EAAS3T,KAAK4T,SACrC,OAAO,EAGX,OAAO,C,EAGX5F,EAAAC,QAAiBoL,EAGjB,MAAMY,EAAQ,I,WAAA,CAAQ,CAAE+B,IAAK,M,uEAMvBlO,EAAA0C,G,EAAA1C,EAAA6C,E,EAAA7C,EAAAmF,sB,EAAAnF,EAAAgF,iB,EAAAhF,EAAAkF,iBAQN,MAAM2G,EAAYF,GAAiB,aAAZA,EAAE9P,MACnBiQ,EAAQH,GAAiB,KAAZA,EAAE9P,MAIf+R,EAAgB,CAACN,EAAaxH,KAClC,IAAItR,GAAS,EACb,MAAM2Z,EAAuBb,EAAYvQ,QACzC,IAAIqR,EAAiBD,EAAqBE,MAE1C,KAAO7Z,GAAU2Z,EAAqBzb,QACpC8B,EAAS2Z,EAAqBL,OAAOQ,GAC5BF,EAAepD,WAAWsD,EAAiBxI,KAGpDsI,EAAiBD,EAAqBE,MAGxC,OAAO7Z,CAAM,EAMT0Y,EAAkB,CAAC1C,EAAM1E,KAC7BrC,EAAM,OAAQ+G,EAAM1E,GACpB0E,EAAO+D,EAAc/D,EAAM1E,GAC3BrC,EAAM,QAAS+G,GACfA,EAAOgE,EAAchE,EAAM1E,GAC3BrC,EAAM,SAAU+G,GAChBA,EAAOiE,EAAejE,EAAM1E,GAC5BrC,EAAM,SAAU+G,GAChBA,EAAOkE,EAAalE,EAAM1E,GAC1BrC,EAAM,QAAS+G,GACRA,GAGHmE,EAAMpR,IAAOA,GAA2B,MAArBA,EAAGqR,eAAgC,MAAPrR,EAS/CiR,EAAgB,CAAChE,EAAM1E,IAC3B0E,EAAKnE,OAAOY,MAAK,OAAQC,KAAKyE,GACrBkD,EAAalD,EAAG7F,KACtByB,KAAK,KAEJsH,EAAe,CAACrE,EAAM1E,KAC1B,MAAM9M,EAAI8M,EAAQE,MAAQsG,EAAGC,EAAEuC,YAAcxC,EAAGC,EAAEwC,OAClD,OAAOvE,EAAK1K,QAAQ9G,GAAG,CAACgW,EAAGC,EAAG7I,EAAG8I,EAAGC,KAElC,IAAIC,EAoBJ,OArBA3L,EAAM,QAAS+G,EAAMwE,EAAGC,EAAG7I,EAAG8I,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAIvI,GACbgJ,EAAM,KAAKH,WAAWA,EAAI,UACjBN,EAAIO,GAEbE,EAAM,KAAKH,KAAK7I,QAAQ6I,MAAM7I,EAAI,QACzB+I,GACT1L,EAAM,kBAAmB0L,GACzBC,EAAM,KAAKH,KAAK7I,KAAK8I,KAAKC,MACrBF,MAAM7I,EAAI,SAGfgJ,EAAM,KAAKH,KAAK7I,KAAK8I,MAChBD,MAAM7I,EAAI,QAGjB3C,EAAM,eAAgB2L,GACfA,CAAG,GACV,EAWEb,EAAgB,CAAC/D,EAAM1E,IAC3B0E,EAAKnE,OAAOY,MAAK,OAAQC,KAAKyE,GACrB0D,EAAa1D,EAAG7F,KACtByB,KAAK,KAEJ8H,EAAe,CAAC7E,EAAM1E,KAC1BrC,EAAM,QAAS+G,EAAM1E,GACrB,MAAM9M,EAAI8M,EAAQE,MAAQsG,EAAGC,EAAE+C,YAAchD,EAAGC,EAAEgD,OAC5CC,EAAI1J,EAAQG,kBAAoB,KAAO,GAC7C,OAAOuE,EAAK1K,QAAQ9G,GAAG,CAACgW,EAAGC,EAAG7I,EAAG8I,EAAGC,KAElC,IAAIC,EA2CJ,OA5CA3L,EAAM,QAAS+G,EAAMwE,EAAGC,EAAG7I,EAAG8I,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAIvI,GACbgJ,EAAM,KAAKH,QAAQO,OAAOP,EAAI,UACrBN,EAAIO,GAEXE,EADQ,MAANH,EACI,KAAKA,KAAK7I,MAAMoJ,MAAMP,MAAM7I,EAAI,QAEhC,KAAK6I,KAAK7I,MAAMoJ,OAAOP,EAAI,UAE1BE,GACT1L,EAAM,kBAAmB0L,GAGrBC,EAFM,MAANH,EACQ,MAAN7I,EACI,KAAK6I,KAAK7I,KAAK8I,KAAKC,MACrBF,KAAK7I,MAAM8I,EAAI,MAEd,KAAKD,KAAK7I,KAAK8I,KAAKC,MACrBF,MAAM7I,EAAI,QAGX,KAAK6I,KAAK7I,KAAK8I,KAAKC,OACpBF,EAAI,YAGZxL,EAAM,SAGF2L,EAFM,MAANH,EACQ,MAAN7I,EACI,KAAK6I,KAAK7I,KAAK8I,IAClBM,MAAMP,KAAK7I,MAAM8I,EAAI,MAElB,KAAKD,KAAK7I,KAAK8I,IAClBM,MAAMP,MAAM7I,EAAI,QAGf,KAAK6I,KAAK7I,KAAK8I,OACfD,EAAI,WAIdxL,EAAM,eAAgB2L,GACfA,CAAG,GACV,EAGEX,EAAiB,CAACjE,EAAM1E,KAC5BrC,EAAM,iBAAkB+G,EAAM1E,GACvB0E,EAAKvD,MAAK,OAAQC,KAAKyE,GACrB8D,EAAc9D,EAAG7F,KACvByB,KAAK,MAGJkI,EAAgB,CAACjF,EAAM1E,KAC3B0E,EAAOA,EAAKnE,OACZ,MAAMrN,EAAI8M,EAAQE,MAAQsG,EAAGC,EAAEmD,aAAepD,EAAGC,EAAEoD,QACnD,OAAOnF,EAAK1K,QAAQ9G,GAAG,CAACoW,EAAKQ,EAAMX,EAAG7I,EAAG8I,EAAGC,KAC1C1L,EAAM,SAAU+G,EAAM4E,EAAKQ,EAAMX,EAAG7I,EAAG8I,EAAGC,GAC1C,MAAMU,EAAKlB,EAAIM,GACTa,EAAKD,GAAMlB,EAAIvI,GACf2J,EAAKD,GAAMnB,EAAIO,GACfc,EAAOD,EA+Db,MA7Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAKrJ,EAAQG,kBAAoB,KAAO,GAEpC4J,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACF1J,EAAI,GAEN8I,EAAI,EAES,MAATU,GAGFA,EAAO,KACHE,GACFb,GAAKA,EAAI,EACT7I,EAAI,EACJ8I,EAAI,IAEJ9I,GAAKA,EAAI,EACT8I,EAAI,IAEY,OAATU,IAGTA,EAAO,IACHE,EACFb,GAAKA,EAAI,EAET7I,GAAKA,EAAI,GAIA,MAATwJ,IACFT,EAAK,MAGPC,EAAM,GAAGQ,EAAOX,KAAK7I,KAAK8I,IAAIC,KACrBW,EACTV,EAAM,KAAKH,QAAQE,OAAQF,EAAI,UACtBc,IACTX,EAAM,KAAKH,KAAK7I,MAAM+I,MACjBF,MAAM7I,EAAI,SAGjB3C,EAAM,gBAAiB2L,GAEhBA,CAAG,GACV,EAKEV,EAAe,CAAClE,EAAM1E,KAC1BrC,EAAM,eAAgB+G,EAAM1E,GAErB0E,EAAKnE,OAAOvG,QAAQwM,EAAGC,EAAE0D,MAAO,KAGnC9C,EAAc,CAAC3C,EAAM1E,KACzBrC,EAAM,cAAe+G,EAAM1E,GACpB0E,EAAKnE,OACTvG,QAAQwM,EAAGxG,EAAQG,kBAAoBsG,EAAE2D,QAAU3D,EAAE4D,MAAO,KAQ3DzD,EAAgB0D,GAAS,CAACC,EAC9Bnd,EAAMod,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,IA2Bd,GAzBL9d,EADEyb,EAAI2B,GACC,GACE3B,EAAI4B,GACN,KAAKD,QAASF,EAAQ,KAAO,KAC3BzB,EAAI6B,GACN,KAAKF,KAAMC,MAAOH,EAAQ,KAAO,KAC/BK,EACF,KAAKvd,IAEL,KAAKA,IAAOkd,EAAQ,KAAO,QAIlCO,EADEhC,EAAIiC,GACD,GACIjC,EAAIkC,GACR,KAAKD,EAAK,UACNjC,EAAImC,GACR,IAAIF,MAAOC,EAAK,QACZE,EACJ,KAAKH,KAAMC,KAAMC,KAAMC,IACnBX,EACJ,IAAIQ,KAAMC,MAAOC,EAAK,MAEtB,KAAKH,MAGatK,OAGrB4H,EAAU,CAACxC,EAAK5F,EAASC,KAC7B,IAAK,IAAIzR,EAAI,EAAGA,EAAIoX,EAAI/Y,OAAQ2B,IAC9B,IAAKoX,EAAIpX,GAAG8S,KAAKtB,GACf,OAAO,EAIX,GAAIA,EAAQmB,WAAWtU,SAAWoT,EAAQG,kBAAmB,CAM3D,IAAK,IAAI5R,EAAI,EAAGA,EAAIoX,EAAI/Y,OAAQ2B,IAE9B,GADAoP,EAAMgI,EAAIpX,GAAGqW,QACTe,EAAIpX,GAAGqW,SAAW/I,EAAW4I,KAI7BkB,EAAIpX,GAAGqW,OAAO1D,WAAWtU,OAAS,EAAG,CACvC,MAAMue,EAAUxF,EAAIpX,GAAGqW,OACvB,GAAIuG,EAAQrK,QAAUf,EAAQe,OAC1BqK,EAAQpK,QAAUhB,EAAQgB,OAC1BoK,EAAQnK,QAAUjB,EAAQiB,MAC5B,OAAO,C,CAMb,OAAO,C,CAGT,OAAO,CAAI,C,uDCngBb,MAAMoK,EAAM7G,OAAO,OACb8G,EAAS9G,OAAO,UAChB+G,EAAoB/G,OAAO,oBAC3BgH,EAAchH,OAAO,cACrBiH,EAAUjH,OAAO,UACjBkH,EAAUlH,OAAO,WACjBmH,EAAoBnH,OAAO,kBAC3BoH,EAAWpH,OAAO,WAClBqH,EAAQrH,OAAO,SACfsH,EAAoBtH,OAAO,kBAE3BuH,EAAc,IAAM,EAkP1B,MAAMC,EAAM,CAACxW,EAAMkO,EAAKuI,KACtB,MAAMC,EAAO1W,EAAKqW,GAAOtF,IAAI7C,GAC7B,GAAIwI,EAAM,CACR,MAAMC,EAAMD,EAAKlW,MACjB,GAAIoW,EAAQ5W,EAAM2W,IAEhB,GADAE,EAAI7W,EAAM0W,IACL1W,EAAKgW,GACR,YAEES,IACEzW,EAAKsW,KACPI,EAAKlW,MAAMsW,IAAMC,KAAKD,OACxB9W,EAAKoW,GAAUY,YAAYN,IAG/B,OAAOC,EAAInW,K,GAIToW,EAAU,CAAC5W,EAAM2W,KACrB,IAAKA,IAASA,EAAIM,SAAWjX,EAAKiW,GAChC,OAAO,EAET,MAAMiB,EAAOH,KAAKD,MAAQH,EAAIG,IAC9B,OAAOH,EAAIM,OAASC,EAAOP,EAAIM,OAC3BjX,EAAKiW,IAAaiB,EAAOlX,EAAKiW,EAAQ,EAGtCkB,EAAOnX,IACX,GAAIA,EAAK8V,GAAU9V,EAAK6V,GACtB,IAAK,IAAIuB,EAASpX,EAAKoW,GAAUiB,KAC/BrX,EAAK8V,GAAU9V,EAAK6V,IAAmB,OAAXuB,GAAkB,CAI9C,MAAME,EAAOF,EAAOE,KACpBT,EAAI7W,EAAMoX,GACVA,EAASE,C,GAKTT,EAAM,CAAC7W,EAAM0W,KACjB,GAAIA,EAAM,CACR,MAAMC,EAAMD,EAAKlW,MACbR,EAAKkW,IACPlW,EAAKkW,GAASS,EAAIzI,IAAKyI,EAAInW,OAE7BR,EAAK8V,IAAWa,EAAItf,OACpB2I,EAAKqW,GAAOhE,OAAOsE,EAAIzI,KACvBlO,EAAKoW,GAAUmB,WAAWb,E,GAI9B,MAAMc,EACJjN,YAAa2D,EAAK1N,EAAOnJ,EAAQyf,EAAKG,GACpCpgB,KAAKqX,IAAMA,EACXrX,KAAK2J,MAAQA,EACb3J,KAAKQ,OAASA,EACdR,KAAKigB,IAAMA,EACXjgB,KAAKogB,OAASA,GAAU,C,EAI5B,MAAMQ,EAAc,CAACzX,EAAM0X,EAAIhB,EAAMiB,KACnC,IAAIhB,EAAMD,EAAKlW,MACXoW,EAAQ5W,EAAM2W,KAChBE,EAAI7W,EAAM0W,GACL1W,EAAKgW,KACRW,OAAM7c,IAEN6c,GACFe,EAAG9gB,KAAK+gB,EAAOhB,EAAInW,MAAOmW,EAAIzI,IAAKlO,EAAK,EAG5C6E,EAAAC,QAnTA,MACEyF,YAAaE,GAOX,GANuB,iBAAZA,IACTA,EAAU,CAAEoI,IAAKpI,IAEdA,IACHA,EAAU,IAERA,EAAQoI,MAA+B,iBAAhBpI,EAAQoI,KAAoBpI,EAAQoI,IAAM,GACnE,MAAM,IAAIhI,UAAU,qCAEVhU,KAAKgf,GAAOpL,EAAQoI,KAAO+E,IAAvC,MAEMC,EAAKpN,EAAQpT,QAAUkf,EAG7B,GAFA1f,KAAKkf,GAAoC,mBAAP8B,EAAqBtB,EAAcsB,EACrEhhB,KAAKmf,GAAevL,EAAQqN,QAAS,EACjCrN,EAAQwM,QAAoC,iBAAnBxM,EAAQwM,OACnC,MAAM,IAAIpM,UAAU,2BACtBhU,KAAKof,GAAWxL,EAAQwM,QAAU,EAClCpgB,KAAKqf,GAAWzL,EAAQsN,QACxBlhB,KAAKsf,GAAqB1L,EAAQuN,iBAAkB,EACpDnhB,KAAKyf,GAAqB7L,EAAQwN,iBAAkB,EACpDphB,KAAKqhB,O,CAIHrF,QAAKsF,GACP,GAAkB,iBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAItN,UAAU,qCAEtBhU,KAAKgf,GAAOsC,GAAMP,IAClBT,EAAKtgB,K,CAEHgc,UACF,OAAOhc,KAAKgf,E,CAGVuC,eAAYA,GACdvhB,KAAKmf,KAAiBoC,C,CAEpBA,iBACF,OAAOvhB,KAAKmf,E,CAGViB,WAAQoB,GACV,GAAkB,iBAAPA,EACT,MAAM,IAAIxN,UAAU,wCAEtBhU,KAAKof,GAAWoC,EAChBlB,EAAKtgB,K,CAEHogB,aACF,OAAOpgB,KAAKof,E,CAIVqC,qBAAkBC,GACF,mBAAPA,IACTA,EAAKhC,GAEHgC,IAAO1hB,KAAKkf,KACdlf,KAAKkf,GAAqBwC,EAC1B1hB,KAAKif,GAAU,EACfjf,KAAKuf,GAAUoC,SAAQ7B,IACrBA,EAAItf,OAASR,KAAKkf,GAAmBY,EAAInW,MAAOmW,EAAIzI,KACpDrX,KAAKif,IAAWa,EAAItf,MAAM,KAG9B8f,EAAKtgB,K,CAEHyhB,uBAAsB,OAAOzhB,KAAKkf,E,CAElC1e,aAAY,OAAOR,KAAKif,E,CACxB2C,gBAAe,OAAO5hB,KAAKuf,GAAU/e,M,CAEzCqhB,SAAUhB,EAAIC,GACZA,EAAQA,GAAS9gB,KACjB,IAAK,IAAIugB,EAASvgB,KAAKuf,GAAUiB,KAAiB,OAAXD,GAAkB,CACvD,MAAME,EAAOF,EAAOE,KACpBG,EAAY5gB,KAAM6gB,EAAIN,EAAQO,GAC9BP,EAASE,C,EAIbkB,QAASd,EAAIC,GACXA,EAAQA,GAAS9gB,KACjB,IAAK,IAAIugB,EAASvgB,KAAKuf,GAAU7U,KAAiB,OAAX6V,GAAkB,CACvD,MAAM7b,EAAO6b,EAAO7b,KACpBkc,EAAY5gB,KAAM6gB,EAAIN,EAAQO,GAC9BP,EAAS7b,C,EAIbqV,OACE,OAAO/Z,KAAKuf,GAAUuC,UAAU9M,KAAIkB,GAAKA,EAAEmB,K,CAG7CvK,SACE,OAAO9M,KAAKuf,GAAUuC,UAAU9M,KAAIkB,GAAKA,EAAEvM,O,CAG7C0X,QACMrhB,KAAKqf,IACLrf,KAAKuf,IACLvf,KAAKuf,GAAU/e,QACjBR,KAAKuf,GAAUoC,SAAQ7B,GAAO9f,KAAKqf,GAASS,EAAIzI,IAAKyI,EAAInW,SAG3D3J,KAAKwf,GAAS,IAAIrE,IAClBnb,KAAKuf,GAAY,IAAIwC,EACrB/hB,KAAKif,GAAU,C,CAGjB+C,OACE,OAAOhiB,KAAKuf,GAAUvK,KAAI8K,IACxBC,EAAQ/f,KAAM8f,IAAe,CAC3B5J,EAAG4J,EAAIzI,IACPR,EAAGiJ,EAAInW,MACP9I,EAAGif,EAAIG,KAAOH,EAAIM,QAAU,MAC3B0B,UAAUriB,QAAOwiB,GAAKA,G,CAG7BC,UACE,OAAOliB,KAAKuf,E,CAGdhG,IAAKlC,EAAK1N,EAAOyW,GAGf,IAFAA,EAASA,GAAUpgB,KAAKof,KAEQ,iBAAXgB,EACnB,MAAM,IAAIpM,UAAU,2BAEtB,MAAMiM,EAAMG,EAASF,KAAKD,MAAQ,EAC5BkC,EAAMniB,KAAKkf,GAAmBvV,EAAO0N,GAE3C,GAAIrX,KAAKwf,GAAOjE,IAAIlE,GAAM,CACxB,GAAI8K,EAAMniB,KAAKgf,GAEb,OADAgB,EAAIhgB,KAAMA,KAAKwf,GAAOtF,IAAI7C,KACnB,EAGT,MACM+K,EADOpiB,KAAKwf,GAAOtF,IAAI7C,GACX1N,MAgBlB,OAZI3J,KAAKqf,KACFrf,KAAKsf,IACRtf,KAAKqf,GAAShI,EAAK+K,EAAKzY,QAG5ByY,EAAKnC,IAAMA,EACXmC,EAAKhC,OAASA,EACdgC,EAAKzY,MAAQA,EACb3J,KAAKif,IAAWkD,EAAMC,EAAK5hB,OAC3B4hB,EAAK5hB,OAAS2hB,EACdniB,KAAKka,IAAI7C,GACTiJ,EAAKtgB,OACE,C,CAGT,MAAM8f,EAAM,IAAIa,EAAMtJ,EAAK1N,EAAOwY,EAAKlC,EAAKG,GAG5C,OAAIN,EAAItf,OAASR,KAAKgf,IAChBhf,KAAKqf,IACPrf,KAAKqf,GAAShI,EAAK1N,IAEd,IAGT3J,KAAKif,IAAWa,EAAItf,OACpBR,KAAKuf,GAAU8C,QAAQvC,GACvB9f,KAAKwf,GAAOjG,IAAIlC,EAAKrX,KAAKuf,GAAU7U,MACpC4V,EAAKtgB,OACE,E,CAGTub,IAAKlE,GACH,IAAKrX,KAAKwf,GAAOjE,IAAIlE,GAAM,OAAO,EAClC,MAAMyI,EAAM9f,KAAKwf,GAAOtF,IAAI7C,GAAK1N,MACjC,OAAQoW,EAAQ/f,KAAM8f,E,CAGxB5F,IAAK7C,GACH,OAAOsI,EAAI3f,KAAMqX,GAAK,E,CAGxBiL,KAAMjL,GACJ,OAAOsI,EAAI3f,KAAMqX,GAAK,E,CAGxB8E,MACE,MAAM0D,EAAO7f,KAAKuf,GAAUiB,KAC5B,OAAKX,GAGLG,EAAIhgB,KAAM6f,GACHA,EAAKlW,OAHH,I,CAMX4Y,IAAKlL,GACH2I,EAAIhgB,KAAMA,KAAKwf,GAAOtF,IAAI7C,G,CAG5BmL,KAAMC,GAEJziB,KAAKqhB,QAEL,MAAMpB,EAAMC,KAAKD,MAEjB,IAAK,IAAIyC,EAAID,EAAIjiB,OAAS,EAAGkiB,GAAK,EAAGA,IAAK,CACxC,MAAM5C,EAAM2C,EAAIC,GACVC,EAAY7C,EAAIjf,GAAK,EAC3B,GAAkB,IAAd8hB,EAEF3iB,KAAKuZ,IAAIuG,EAAI5J,EAAG4J,EAAIjJ,OACjB,CACH,MAAMuJ,EAASuC,EAAY1C,EAEvBG,EAAS,GACXpgB,KAAKuZ,IAAIuG,EAAI5J,EAAG4J,EAAIjJ,EAAGuJ,E,GAM/BwC,QACE5iB,KAAKwf,GAAOmC,SAAQ,CAAChY,EAAO0N,IAAQsI,EAAI3f,KAAMqX,GAAK,I,wCCxPvD,SAASwL,EAAS1e,GAChB,IAAIgF,EAAOnJ,KASX,GARMmJ,aAAgB0Z,IACpB1Z,EAAO,IAAI0Z,GAGb1Z,EAAKqX,KAAO,KACZrX,EAAKuB,KAAO,KACZvB,EAAK3I,OAAS,EAEV2D,GAAgC,mBAAjBA,EAAKwd,QACtBxd,EAAKwd,SAAQ,SAAUS,GACrBjZ,EAAKjI,KAAKkhB,E,SAEP,GAAIna,UAAUzH,OAAS,EAC5B,IAAK,IAAI2B,EAAI,EAAGugB,EAAIza,UAAUzH,OAAQ2B,EAAIugB,EAAGvgB,IAC3CgH,EAAKjI,KAAK+G,UAAU9F,IAIxB,OAAOgH,C,CAoVT,SAAS2Z,EAAQ3Z,EAAM0W,EAAMlW,GAC3B,IAAIoZ,EAAWlD,IAAS1W,EAAKuB,KAC3B,IAAIsY,EAAKrZ,EAAO,KAAMkW,EAAM1W,GAC5B,IAAI6Z,EAAKrZ,EAAOkW,EAAMA,EAAKnb,KAAMyE,GAWnC,OATsB,OAAlB4Z,EAASre,OACXyE,EAAKqX,KAAOuC,GAEQ,OAAlBA,EAAStC,OACXtX,EAAKuB,KAAOqY,GAGd5Z,EAAK3I,SAEEuiB,C,CAGT,SAASE,EAAM9Z,EAAMiZ,GACnBjZ,EAAKqX,KAAO,IAAIwC,EAAKZ,EAAMjZ,EAAKqX,KAAM,KAAMrX,GACvCA,EAAKuB,OACRvB,EAAKuB,KAAOvB,EAAKqX,MAEnBrX,EAAK3I,Q,CAGP,SAAS0iB,EAAS/Z,EAAMiZ,GACtBjZ,EAAKuB,KAAO,IAAIsY,EAAKZ,EAAM,KAAMjZ,EAAKuB,KAAMvB,GACvCA,EAAKqX,OACRrX,EAAKqX,KAAOrX,EAAKuB,MAEnBvB,EAAK3I,Q,CAGP,SAASwiB,EAAMrZ,EAAO8W,EAAM/b,EAAMP,GAChC,KAAMnE,gBAAgBgjB,GACpB,OAAO,IAAIA,EAAKrZ,EAAO8W,EAAM/b,EAAMP,GAGrCnE,KAAKmE,KAAOA,EACZnE,KAAK2J,MAAQA,EAET8W,GACFA,EAAK/b,KAAO1E,KACZA,KAAKygB,KAAOA,GAEZzgB,KAAKygB,KAAO,KAGV/b,GACFA,EAAK+b,KAAOzgB,KACZA,KAAK0E,KAAOA,GAEZ1E,KAAK0E,KAAO,I,CAjahBsJ,EAAAC,QAAiB4U,EAEjBA,EAAQM,KAAOH,EACfH,EAAQpa,OAASoa,EAyBjBA,EAAQ/e,UAAU4c,WAAa,SAAUb,GACvC,GAAIA,EAAK1b,OAASnE,KAChB,MAAM,IAAIuH,MAAM,oDAGlB,IAAI7C,EAAOmb,EAAKnb,KACZ+b,EAAOZ,EAAKY,KAsBhB,OApBI/b,IACFA,EAAK+b,KAAOA,GAGVA,IACFA,EAAK/b,KAAOA,GAGVmb,IAAS7f,KAAK0K,OAChB1K,KAAK0K,KAAOhG,GAEVmb,IAAS7f,KAAKwgB,OAChBxgB,KAAKwgB,KAAOC,GAGdZ,EAAK1b,KAAK3D,SACVqf,EAAKnb,KAAO,KACZmb,EAAKY,KAAO,KACZZ,EAAK1b,KAAO,KAELO,C,EAGTme,EAAQ/e,UAAUqc,YAAc,SAAUN,GACxC,GAAIA,IAAS7f,KAAK0K,KAAlB,CAIImV,EAAK1b,MACP0b,EAAK1b,KAAKuc,WAAWb,GAGvB,IAAInV,EAAO1K,KAAK0K,KAChBmV,EAAK1b,KAAOnE,KACZ6f,EAAKnb,KAAOgG,EACRA,IACFA,EAAK+V,KAAOZ,GAGd7f,KAAK0K,KAAOmV,EACP7f,KAAKwgB,OACRxgB,KAAKwgB,KAAOX,GAEd7f,KAAKQ,QAlBH,C,EAqBJqiB,EAAQ/e,UAAUsf,SAAW,SAAUvD,GACrC,GAAIA,IAAS7f,KAAKwgB,KAAlB,CAIIX,EAAK1b,MACP0b,EAAK1b,KAAKuc,WAAWb,GAGvB,IAAIW,EAAOxgB,KAAKwgB,KAChBX,EAAK1b,KAAOnE,KACZ6f,EAAKY,KAAOD,EACRA,IACFA,EAAK9b,KAAOmb,GAGd7f,KAAKwgB,KAAOX,EACP7f,KAAK0K,OACR1K,KAAK0K,KAAOmV,GAEd7f,KAAKQ,QAlBH,C,EAqBJqiB,EAAQ/e,UAAU5C,KAAO,WACvB,IAAK,IAAIiB,EAAI,EAAGugB,EAAIza,UAAUzH,OAAQ2B,EAAIugB,EAAGvgB,IAC3C8gB,EAAKjjB,KAAMiI,UAAU9F,IAEvB,OAAOnC,KAAKQ,M,EAGdqiB,EAAQ/e,UAAUue,QAAU,WAC1B,IAAK,IAAIlgB,EAAI,EAAGugB,EAAIza,UAAUzH,OAAQ2B,EAAIugB,EAAGvgB,IAC3C+gB,EAAQljB,KAAMiI,UAAU9F,IAE1B,OAAOnC,KAAKQ,M,EAGdqiB,EAAQ/e,UAAUqY,IAAM,WACtB,GAAKnc,KAAKwgB,KAAV,CAIA,IAAIrZ,EAAMnH,KAAKwgB,KAAK7W,MAQpB,OAPA3J,KAAKwgB,KAAOxgB,KAAKwgB,KAAKC,KAClBzgB,KAAKwgB,KACPxgB,KAAKwgB,KAAK9b,KAAO,KAEjB1E,KAAK0K,KAAO,KAEd1K,KAAKQ,SACE2G,CAXW,C,EAcpB0b,EAAQ/e,UAAUrD,MAAQ,WACxB,GAAKT,KAAK0K,KAAV,CAIA,IAAIvD,EAAMnH,KAAK0K,KAAKf,MAQpB,OAPA3J,KAAK0K,KAAO1K,KAAK0K,KAAKhG,KAClB1E,KAAK0K,KACP1K,KAAK0K,KAAK+V,KAAO,KAEjBzgB,KAAKwgB,KAAO,KAEdxgB,KAAKQ,SACE2G,CAXW,C,EAcpB0b,EAAQ/e,UAAU6d,QAAU,SAAUd,EAAIC,GACxCA,EAAQA,GAAS9gB,KACjB,IAAK,IAAIugB,EAASvgB,KAAK0K,KAAMvI,EAAI,EAAc,OAAXoe,EAAiBpe,IACnD0e,EAAG9gB,KAAK+gB,EAAOP,EAAO5W,MAAOxH,EAAGnC,MAChCugB,EAASA,EAAO7b,I,EAIpBme,EAAQ/e,UAAUuf,eAAiB,SAAUxC,EAAIC,GAC/CA,EAAQA,GAAS9gB,KACjB,IAAK,IAAIugB,EAASvgB,KAAKwgB,KAAMre,EAAInC,KAAKQ,OAAS,EAAc,OAAX+f,EAAiBpe,IACjE0e,EAAG9gB,KAAK+gB,EAAOP,EAAO5W,MAAOxH,EAAGnC,MAChCugB,EAASA,EAAOE,I,EAIpBoC,EAAQ/e,UAAUoW,IAAM,SAAUoJ,GAChC,IAAK,IAAInhB,EAAI,EAAGoe,EAASvgB,KAAK0K,KAAiB,OAAX6V,GAAmBpe,EAAImhB,EAAGnhB,IAE5Doe,EAASA,EAAO7b,KAElB,GAAIvC,IAAMmhB,GAAgB,OAAX/C,EACb,OAAOA,EAAO5W,K,EAIlBkZ,EAAQ/e,UAAUyf,WAAa,SAAUD,GACvC,IAAK,IAAInhB,EAAI,EAAGoe,EAASvgB,KAAKwgB,KAAiB,OAAXD,GAAmBpe,EAAImhB,EAAGnhB,IAE5Doe,EAASA,EAAOE,KAElB,GAAIte,IAAMmhB,GAAgB,OAAX/C,EACb,OAAOA,EAAO5W,K,EAIlBkZ,EAAQ/e,UAAUkR,IAAM,SAAU6L,EAAIC,GACpCA,EAAQA,GAAS9gB,KAEjB,IADA,IAAImH,EAAM,IAAI0b,EACLtC,EAASvgB,KAAK0K,KAAiB,OAAX6V,GAC3BpZ,EAAIjG,KAAK2f,EAAG9gB,KAAK+gB,EAAOP,EAAO5W,MAAO3J,OACtCugB,EAASA,EAAO7b,KAElB,OAAOyC,C,EAGT0b,EAAQ/e,UAAU0f,WAAa,SAAU3C,EAAIC,GAC3CA,EAAQA,GAAS9gB,KAEjB,IADA,IAAImH,EAAM,IAAI0b,EACLtC,EAASvgB,KAAKwgB,KAAiB,OAAXD,GAC3BpZ,EAAIjG,KAAK2f,EAAG9gB,KAAK+gB,EAAOP,EAAO5W,MAAO3J,OACtCugB,EAASA,EAAOE,KAElB,OAAOtZ,C,EAGT0b,EAAQ/e,UAAUqS,OAAS,SAAU0K,EAAI4C,GACvC,IAAIjhB,EACA+d,EAASvgB,KAAK0K,KAClB,GAAIzC,UAAUzH,OAAS,EACrBgC,EAAMihB,MACD,KAAIzjB,KAAK0K,KAId,MAAM,IAAIsJ,UAAU,8CAHpBuM,EAASvgB,KAAK0K,KAAKhG,KACnBlC,EAAMxC,KAAK0K,KAAKf,KAEiD,CAGnE,IAAK,IAAIxH,EAAI,EAAc,OAAXoe,EAAiBpe,IAC/BK,EAAMqe,EAAGre,EAAK+d,EAAO5W,MAAOxH,GAC5Boe,EAASA,EAAO7b,KAGlB,OAAOlC,C,EAGTqgB,EAAQ/e,UAAU4f,cAAgB,SAAU7C,EAAI4C,GAC9C,IAAIjhB,EACA+d,EAASvgB,KAAKwgB,KAClB,GAAIvY,UAAUzH,OAAS,EACrBgC,EAAMihB,MACD,KAAIzjB,KAAKwgB,KAId,MAAM,IAAIxM,UAAU,8CAHpBuM,EAASvgB,KAAKwgB,KAAKC,KACnBje,EAAMxC,KAAKwgB,KAAK7W,KAEiD,CAGnE,IAAK,IAAIxH,EAAInC,KAAKQ,OAAS,EAAc,OAAX+f,EAAiBpe,IAC7CK,EAAMqe,EAAGre,EAAK+d,EAAO5W,MAAOxH,GAC5Boe,EAASA,EAAOE,KAGlB,OAAOje,C,EAGTqgB,EAAQ/e,UAAUge,QAAU,WAE1B,IADA,IAAIW,EAAM,IAAIpjB,MAAMW,KAAKQ,QAChB2B,EAAI,EAAGoe,EAASvgB,KAAK0K,KAAiB,OAAX6V,EAAiBpe,IACnDsgB,EAAItgB,GAAKoe,EAAO5W,MAChB4W,EAASA,EAAO7b,KAElB,OAAO+d,C,EAGTI,EAAQ/e,UAAU6f,eAAiB,WAEjC,IADA,IAAIlB,EAAM,IAAIpjB,MAAMW,KAAKQ,QAChB2B,EAAI,EAAGoe,EAASvgB,KAAKwgB,KAAiB,OAAXD,EAAiBpe,IACnDsgB,EAAItgB,GAAKoe,EAAO5W,MAChB4W,EAASA,EAAOE,KAElB,OAAOgC,C,EAGTI,EAAQ/e,UAAU+G,MAAQ,SAAU7J,EAAMyd,IACxCA,EAAKA,GAAMze,KAAKQ,QACP,IACPie,GAAMze,KAAKQ,SAEbQ,EAAOA,GAAQ,GACJ,IACTA,GAAQhB,KAAKQ,QAEf,IAAI0c,EAAM,IAAI2F,EACd,GAAIpE,EAAKzd,GAAQyd,EAAK,EACpB,OAAOvB,EAELlc,EAAO,IACTA,EAAO,GAELyd,EAAKze,KAAKQ,SACZie,EAAKze,KAAKQ,QAEZ,IAAK,IAAI2B,EAAI,EAAGoe,EAASvgB,KAAK0K,KAAiB,OAAX6V,GAAmBpe,EAAInB,EAAMmB,IAC/Doe,EAASA,EAAO7b,KAElB,KAAkB,OAAX6b,GAAmBpe,EAAIsc,EAAItc,IAAKoe,EAASA,EAAO7b,KACrDwY,EAAIhc,KAAKqf,EAAO5W,OAElB,OAAOuT,C,EAGT2F,EAAQ/e,UAAU8f,aAAe,SAAU5iB,EAAMyd,IAC/CA,EAAKA,GAAMze,KAAKQ,QACP,IACPie,GAAMze,KAAKQ,SAEbQ,EAAOA,GAAQ,GACJ,IACTA,GAAQhB,KAAKQ,QAEf,IAAI0c,EAAM,IAAI2F,EACd,GAAIpE,EAAKzd,GAAQyd,EAAK,EACpB,OAAOvB,EAELlc,EAAO,IACTA,EAAO,GAELyd,EAAKze,KAAKQ,SACZie,EAAKze,KAAKQ,QAEZ,IAAK,IAAI2B,EAAInC,KAAKQ,OAAQ+f,EAASvgB,KAAKwgB,KAAiB,OAAXD,GAAmBpe,EAAIsc,EAAItc,IACvEoe,EAASA,EAAOE,KAElB,KAAkB,OAAXF,GAAmBpe,EAAInB,EAAMmB,IAAKoe,EAASA,EAAOE,KACvDvD,EAAIhc,KAAKqf,EAAO5W,OAElB,OAAOuT,C,EAGT2F,EAAQ/e,UAAU+f,OAAS,SAAUC,EAAOC,KAAgBC,GACtDF,EAAQ9jB,KAAKQ,SACfsjB,EAAQ9jB,KAAKQ,OAAS,GAEpBsjB,EAAQ,IACVA,EAAQ9jB,KAAKQ,OAASsjB,GAGxB,IAAK,IAAI3hB,EAAI,EAAGoe,EAASvgB,KAAK0K,KAAiB,OAAX6V,GAAmBpe,EAAI2hB,EAAO3hB,IAChEoe,EAASA,EAAO7b,KAGlB,IAAIwY,EAAM,GACV,IAAS/a,EAAI,EAAGoe,GAAUpe,EAAI4hB,EAAa5hB,IACzC+a,EAAIhc,KAAKqf,EAAO5W,OAChB4W,EAASvgB,KAAK0gB,WAAWH,GAEZ,OAAXA,IACFA,EAASvgB,KAAKwgB,MAGZD,IAAWvgB,KAAK0K,MAAQ6V,IAAWvgB,KAAKwgB,OAC1CD,EAASA,EAAOE,MAGlB,IAASte,EAAI,EAAGA,EAAI6hB,EAAMxjB,OAAQ2B,IAChCoe,EAASuC,EAAO9iB,KAAMugB,EAAQyD,EAAM7hB,IAEtC,OAAO+a,C,EAGT2F,EAAQ/e,UAAUmgB,QAAU,WAG1B,IAFA,IAAIvZ,EAAO1K,KAAK0K,KACZ8V,EAAOxgB,KAAKwgB,KACPD,EAAS7V,EAAiB,OAAX6V,EAAiBA,EAASA,EAAOE,KAAM,CAC7D,IAAIzD,EAAIuD,EAAOE,KACfF,EAAOE,KAAOF,EAAO7b,KACrB6b,EAAO7b,KAAOsY,C,CAIhB,OAFAhd,KAAK0K,KAAO8V,EACZxgB,KAAKwgB,KAAO9V,EACL1K,I,EA2DT,IAEE+N,EAAA,SAAyB8U,EACd,CAAX,MAAOjM,GAAI,C,sCCxab5I,EAAAC,QAAiB,SAAUiW,GACzBA,EAAQpgB,UAAUqU,OAAOgM,UAAY,YACnC,IAAK,IAAI5D,EAASvgB,KAAK0K,KAAM6V,EAAQA,EAASA,EAAO7b,WAC7C6b,EAAO5W,K,wCCJnB,IAAA+F,EAAA3B,EAAA,SASAC,EAAAC,QARkB,CAAC0F,EAAS2F,EAAO1F,KACjC,IACE0F,EAAQ,IAAI5J,EAAM4J,EAAO1F,E,CACzB,MAAOgD,GACP,OAAO,C,CAET,OAAO0C,EAAMrE,KAAKtB,EAAQ,C,sCCP5B,IAAAjE,EAAA3B,EAAA,SAOAC,EAAAC,QAJsB,CAACqL,EAAO1F,IAC5B,IAAIlE,EAAM4J,EAAO1F,GAAS2F,IACvBvE,KAAIsD,GAAQA,EAAKtD,KAAIyE,GAAKA,EAAE9P,QAAO0L,KAAK,KAAKlB,OAAOY,MAAM,M,sCCL/D,IAAAxE,EAAAxC,EAAA,S,aAwBAC,EAAAC,QArBsB,CAACmW,EAAU9K,EAAO1F,KACtC,IAAIoI,EAAM,KACNqI,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAI5U,EAAM4J,EAAO1F,E,CAC5B,MAAOgD,GACP,OAAO,I,CAYT,OAVAwN,EAASzC,SAAS9K,IACZyN,EAASrP,KAAK4B,KAEXmF,IAA4B,IAArBqI,EAAM/O,QAAQuB,KAExBmF,EAAMnF,EACNwN,EAAQ,IAAI9T,EAAOyL,EAAKpI,I,IAIvBoI,CAAG,C,sCCtBZ,IAAAzL,EAAAxC,EAAA,S,aAuBAC,EAAAC,QArBsB,CAACmW,EAAU9K,EAAO1F,KACtC,IAAI2Q,EAAM,KACNC,EAAQ,KACRF,EAAW,KACf,IACEA,EAAW,IAAI5U,EAAM4J,EAAO1F,E,CAC5B,MAAOgD,GACP,OAAO,I,CAYT,OAVAwN,EAASzC,SAAS9K,IACZyN,EAASrP,KAAK4B,KAEX0N,GAA4B,IAArBC,EAAMlP,QAAQuB,KAExB0N,EAAM1N,EACN2N,EAAQ,IAAIjU,EAAOgU,EAAK3Q,I,IAIvB2Q,CAAG,C,sCCrBZ,IAAAhU,EAAAxC,EAAA,S,0BA4DAC,EAAAC,QAxDmB,CAACqL,EAAOxF,KACzBwF,EAAQ,IAAI5J,EAAM4J,EAAOxF,GAEzB,IAAI2Q,EAAS,IAAIlU,EAAO,SACxB,GAAI+I,EAAMrE,KAAKwP,GACb,OAAOA,EAIT,GADAA,EAAS,IAAIlU,EAAO,WAChB+I,EAAMrE,KAAKwP,GACb,OAAOA,EAGTA,EAAS,KACT,IAAK,IAAItiB,EAAI,EAAGA,EAAImX,EAAMC,IAAI/Y,SAAU2B,EAAG,CACzC,MAAMiZ,EAAc9B,EAAMC,IAAIpX,GAE9B,IAAIuiB,EAAS,KACbtJ,EAAYuG,SAASgD,IAEnB,MAAMC,EAAU,IAAIrU,EAAOoU,EAAWnM,OAAO7E,SAC7C,OAAQgR,EAAWlM,UACjB,IAAK,IAC+B,IAA9BmM,EAAQ9P,WAAWtU,OACrBokB,EAAQhQ,QAERgQ,EAAQ9P,WAAW5T,KAAK,GAE1B0jB,EAAQnQ,IAAMmQ,EAAQxP,SAExB,IAAK,GACL,IAAK,KACEsP,IAAUzV,EAAG2V,EAASF,KACzBA,EAASE,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAIrd,MAAM,yBAAyBod,EAAWlM,Y,KAGtDiM,GAAYD,IAAUxV,EAAGwV,EAAQC,KACnCD,EAASC,E,CAIb,OAAID,GAAUnL,EAAMrE,KAAKwP,GAChBA,EAGF,IAAI,C,sCC1Db,IAAA/U,EAAA3B,EAAA,SAUAC,EAAAC,QATmB,CAACqL,EAAO1F,KACzB,IAGE,OAAO,IAAIlE,EAAM4J,EAAO1F,GAAS0F,OAAS,G,CAC1C,MAAO1C,GACP,OAAO,I,wCCPX,IAAArG,EAAAxC,EAAA,S,aAEA,MAAMsK,IAAEwM,GAAQpV,E,kFA6EhBzB,EAAAC,QArEgB,CAAC0F,EAAS2F,EAAOwL,EAAMlR,KAIrC,IAAImR,EAAMC,EAAOC,EAAM3M,EAAM4M,EAC7B,OAJAvR,EAAU,IAAIpD,EAAOoD,EAASC,GAC9B0F,EAAQ,IAAI5J,EAAM4J,EAAO1F,GAGjBkR,GACN,IAAK,IACHC,EAAO9V,EACP+V,EAAQ1V,EACR2V,EAAO/V,EACPoJ,EAAO,IACP4M,EAAQ,KACR,MACF,IAAK,IACHH,EAAO7V,EACP8V,EAAQ3V,EACR4V,EAAOhW,EACPqJ,EAAO,IACP4M,EAAQ,KACR,MACF,QACE,MAAM,IAAIlR,UAAU,yCAIxB,GAAIrE,EAAUgE,EAAS2F,EAAO1F,GAC5B,OAAO,EAMT,IAAK,IAAIzR,EAAI,EAAGA,EAAImX,EAAMC,IAAI/Y,SAAU2B,EAAG,CACzC,MAAMiZ,EAAc9B,EAAMC,IAAIpX,GAE9B,IAAIgjB,EAAO,KACPC,EAAM,KAiBV,GAfAhK,EAAYuG,SAASgD,IACfA,EAAWnM,SAAWqM,IACxBF,EAAa,IAAIlV,EAAW,YAE9B0V,EAAOA,GAAQR,EACfS,EAAMA,GAAOT,EACTI,EAAKJ,EAAWnM,OAAQ2M,EAAK3M,OAAQ5E,GACvCuR,EAAOR,EACEM,EAAKN,EAAWnM,OAAQ4M,EAAI5M,OAAQ5E,KAC7CwR,EAAMT,EAAU,IAMhBQ,EAAK1M,WAAaH,GAAQ6M,EAAK1M,WAAayM,EAC9C,OAAO,EAKT,KAAME,EAAI3M,UAAY2M,EAAI3M,WAAaH,IACnC0M,EAAMrR,EAASyR,EAAI5M,QACrB,OAAO,EACF,GAAI4M,EAAI3M,WAAayM,GAASD,EAAKtR,EAASyR,EAAI5M,QACrD,OAAO,C,CAGX,OAAO,CAAI,C,sCC3Eb,IAAAvI,EAAAlC,EAAA,SAEAC,EAAAC,QADY,CAAC0F,EAAS2F,EAAO1F,IAAY3D,EAAQ0D,EAAS2F,EAAO,IAAK1F,E,sCCFtE,IAAA3D,EAAAlC,EAAA,SAGAC,EAAAC,QADY,CAAC0F,EAAS2F,EAAO1F,IAAY3D,EAAQ0D,EAAS2F,EAAO,IAAK1F,E,sCCFtE,IAAAlE,EAAA3B,EAAA,SAMAC,EAAAC,QALmB,CAACoX,EAAIC,EAAI1R,KAC1ByR,EAAK,IAAI3V,EAAM2V,EAAIzR,GACnB0R,EAAK,IAAI5V,EAAM4V,EAAI1R,GACZyR,EAAGvM,WAAWwM,G,sCCDvB,IAAA3V,EAAA5B,EAAA,S,aAEAC,EAAAC,QAAiB,CAACmW,EAAU9K,EAAO1F,KACjC,MAAM2F,EAAM,GACZ,IAAIG,EAAQ,KACR+G,EAAO,KACX,MAAM5J,EAAIuN,EAAS3M,MAAK,CAAC9B,EAAGvL,IAAMuE,EAAQgH,EAAGvL,EAAGwJ,KAChD,IAAK,MAAMD,KAAWkD,EAAG,CACNlH,EAAUgE,EAAS2F,EAAO1F,IAEzC6M,EAAO9M,EACF+F,IACHA,EAAQ/F,KAGN8M,GACFlH,EAAIrY,KAAK,CAACwY,EAAO+G,IAEnBA,EAAO,KACP/G,EAAQ,K,CAGRA,GACFH,EAAIrY,KAAK,CAACwY,EAAO,OAGnB,MAAM6L,EAAS,GACf,IAAK,MAAOhB,EAAKvI,KAAQzC,EACnBgL,IAAQvI,EACVuJ,EAAOrkB,KAAKqjB,GACFvI,GAAOuI,IAAQ1N,EAAE,GAEjBmF,EAEDuI,IAAQ1N,EAAE,GACnB0O,EAAOrkB,KAAK,KAAK8a,KAEjBuJ,EAAOrkB,KAAK,GAAGqjB,OAASvI,KAJxBuJ,EAAOrkB,KAAK,KAAKqjB,KAFjBgB,EAAOrkB,KAAK,KAShB,MAAMskB,EAAaD,EAAOlQ,KAAK,QACzBoQ,EAAgC,iBAAdnM,EAAM7E,IAAmB6E,EAAM7E,IAAMkD,OAAO2B,GACpE,OAAOkM,EAAWhlB,OAASilB,EAASjlB,OAASglB,EAAalM,CAAK,C,sCC7CjE,IAAA5J,EAAA3B,EAAA,S,aAEA,MAAMsK,IAAEqN,GAAQjW,E,8BAwChB,MA4BMkW,EAAe,CAAC7c,EAAK8c,EAAKhS,KAC9B,GAAI9K,IAAQ8c,EACV,OAAO,EAGT,GAAmB,IAAf9c,EAAItI,QAAgBsI,EAAI,GAAG0P,SAAWkN,EAAK,CAC7C,GAAmB,IAAfE,EAAIplB,QAAgBolB,EAAI,GAAGpN,SAAWkN,EACxC,OAAO,EAEP5c,EADS8K,EAAQG,kBACX,CAAC,IAAItE,EAAW,cAEhB,CAAC,IAAIA,EAAW,W,CAI1B,GAAmB,IAAfmW,EAAIplB,QAAgBolB,EAAI,GAAGpN,SAAWkN,EAAK,CAC7C,GAAI9R,EAAQG,kBACV,OAAO,EAEP6R,EAAM,CAAC,IAAInW,EAAW,W,CAI1B,MAAMoW,EAAQ,IAAIC,IAClB,IAAIC,EAAI9Z,EAeJ+Z,EA6BAC,EAAQC,EACRC,EAAUC,EA5Cd,IAAK,MAAM3M,KAAK3Q,EACK,MAAf2Q,EAAEhB,UAAmC,OAAfgB,EAAEhB,SAC1BsN,EAAKM,EAASN,EAAItM,EAAG7F,GACG,MAAf6F,EAAEhB,UAAmC,OAAfgB,EAAEhB,SACjCxM,EAAKqa,EAAQra,EAAIwN,EAAG7F,GAEpBiS,EAAMU,IAAI9M,EAAEjB,QAIhB,GAAIqN,EAAMvK,KAAO,EACf,OAAO,KAIT,GAAIyK,GAAM9Z,EAAI,CAEZ,GADA+Z,EAAWrX,EAAQoX,EAAGvN,OAAQvM,EAAGuM,OAAQ5E,GACrCoS,EAAW,EACb,OAAO,KACF,GAAiB,IAAbA,IAAmC,OAAhBD,EAAGtN,UAAqC,OAAhBxM,EAAGwM,UACvD,OAAO,I,CAKX,IAAK,MAAM+N,KAAMX,EAAO,CACtB,GAAIE,IAAOpW,EAAU6W,EAAI7O,OAAOoO,GAAKnS,GACnC,OAAO,KAGT,GAAI3H,IAAO0D,EAAU6W,EAAI7O,OAAO1L,GAAK2H,GACnC,OAAO,KAGT,IAAK,MAAM6F,KAAKmM,EACd,IAAKjW,EAAU6W,EAAI7O,OAAO8B,GAAI7F,GAC5B,OAAO,EAIX,OAAO,C,CAOT,IAAI6S,KAAexa,GAChB2H,EAAQG,oBACT9H,EAAGuM,OAAO1D,WAAWtU,SAASyL,EAAGuM,OAC/BkO,KAAeX,GAChBnS,EAAQG,oBACTgS,EAAGvN,OAAO1D,WAAWtU,SAASulB,EAAGvN,OAE/BiO,GAAmD,IAAnCA,EAAa3R,WAAWtU,QACxB,MAAhByL,EAAGwM,UAAmD,IAA/BgO,EAAa3R,WAAW,KACjD2R,GAAe,GAGjB,IAAK,MAAME,KAAKf,EAAK,CAGnB,GAFAQ,EAAWA,GAA2B,MAAfO,EAAElO,UAAmC,OAAfkO,EAAElO,SAC/C0N,EAAWA,GAA2B,MAAfQ,EAAElO,UAAmC,OAAfkO,EAAElO,SAC3CsN,EASF,GARIW,GACEC,EAAEnO,OAAO1D,YAAc6R,EAAEnO,OAAO1D,WAAWtU,QAC3CmmB,EAAEnO,OAAO9D,QAAUgS,EAAahS,OAChCiS,EAAEnO,OAAO7D,QAAU+R,EAAa/R,OAChCgS,EAAEnO,OAAO5D,QAAU8R,EAAa9R,QAClC8R,GAAe,GAGA,MAAfC,EAAElO,UAAmC,OAAfkO,EAAElO,UAE1B,GADAwN,EAASI,EAASN,EAAIY,EAAG/S,GACrBqS,IAAWU,GAAKV,IAAWF,EAC7B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGtN,WAAsB9I,EAAUoW,EAAGvN,OAAQb,OAAOgP,GAAI/S,GAClE,OAAO,EAGX,GAAI3H,EASF,GARIwa,GACEE,EAAEnO,OAAO1D,YAAc6R,EAAEnO,OAAO1D,WAAWtU,QAC3CmmB,EAAEnO,OAAO9D,QAAU+R,EAAa/R,OAChCiS,EAAEnO,OAAO7D,QAAU8R,EAAa9R,OAChCgS,EAAEnO,OAAO5D,QAAU6R,EAAa7R,QAClC6R,GAAe,GAGA,MAAfE,EAAElO,UAAmC,OAAfkO,EAAElO,UAE1B,GADAyN,EAAQI,EAAQra,EAAI0a,EAAG/S,GACnBsS,IAAUS,GAAKT,IAAUja,EAC3B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGwM,WAAsB9I,EAAU1D,EAAGuM,OAAQb,OAAOgP,GAAI/S,GAClE,OAAO,EAGX,IAAK+S,EAAElO,WAAaxM,GAAM8Z,IAAoB,IAAbC,EAC/B,OAAO,C,CAOX,QAAID,GAAMI,IAAala,GAAmB,IAAb+Z,OAIzB/Z,GAAMma,IAAaL,GAAmB,IAAbC,MAOzBU,IAAgBD,GAIT,EAIPJ,EAAW,CAAC1Q,EAAGvL,EAAGwJ,KACtB,IAAK+B,EACH,OAAOvL,EAET,MAAMkO,EAAO3J,EAAQgH,EAAE6C,OAAQpO,EAAEoO,OAAQ5E,GACzC,OAAO0E,EAAO,EAAI3C,EACd2C,EAAO,GACQ,MAAflO,EAAEqO,UAAmC,OAAf9C,EAAE8C,SADbrO,EAEXuL,CAAC,EAID2Q,EAAU,CAAC3Q,EAAGvL,EAAGwJ,KACrB,IAAK+B,EACH,OAAOvL,EAET,MAAMkO,EAAO3J,EAAQgH,EAAE6C,OAAQpO,EAAEoO,OAAQ5E,GACzC,OAAO0E,EAAO,EAAI3C,EACd2C,EAAO,GACQ,MAAflO,EAAEqO,UAAmC,OAAf9C,EAAE8C,SADbrO,EAEXuL,CAAC,EAGP3H,EAAAC,QAzMe,CAACnF,EAAK8c,EAAKhS,EAAU,MAClC,GAAI9K,IAAQ8c,EACV,OAAO,EAGT9c,EAAM,IAAI4G,EAAM5G,EAAK8K,GACrBgS,EAAM,IAAIlW,EAAMkW,EAAKhS,GACrB,IAAIgT,GAAa,EAEjBC,EAAO,IAAK,MAAMC,KAAahe,EAAIyQ,IAAK,CACtC,IAAK,MAAMwN,KAAanB,EAAIrM,IAAK,CAC/B,MAAMyN,EAAQrB,EAAamB,EAAWC,EAAWnT,GAEjD,GADAgT,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,C,CAOb,GAAID,EACF,OAAO,C,CAGX,OAAO,CAAI,C,iECrDb,IAAIK,EAAK,EACHC,EAA4B,GAOrBC,EAAM,SAACxiB,EAAcjC,EAAkBzB,GAClD,IAAMmmB,EAAW,CACfziB,KAAIA,EACJ0G,GAAIsM,SAASsP,GACbI,KAAM,IAAInH,MAERxd,IAAS0kB,EAAI1kB,QAAUA,GACvBzB,IAAMmmB,EAAInmB,KAAOA,GAsBvB,SAAkBqmB,GAChB,IAAK,IAAInlB,EAAI,EAAGA,EAAI+kB,EAAY1mB,OAAQ2B,IACtC,IACE+kB,EAAY/kB,GAAGmlB,E,CACf,MAAOzmB,GACPwH,QAAQvD,MAAMjE,E,EA1BlB0mB,CAASH,E,EAuCW,oBAAX3oB,SACTA,OAAO+oB,mBAhCa,SAAC7f,GAErB,OADAuf,EAAYhmB,KAAKyG,GACV,WACL,IAAMxF,EAAI+kB,EAAYO,QAAQ9f,IAEpB,IAANxF,IAEF+kB,EAAY/kB,GAAK+kB,EAAYA,EAAY1mB,OAAS,GAClD0mB,EAAY/K,M","sources":["node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","node_modules/@ledgerhq/hw-transport-webhid/node_modules/@ledgerhq/hw-transport/src/Transport.ts","node_modules/@ledgerhq/devices/src/hid-framing.ts","node_modules/@ledgerhq/devices/src/index.ts","node_modules/@ledgerhq/devices/node_modules/semver/index.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","node_modules/lru-cache/index.js","node_modules/yallist/yallist.js","node_modules/yallist/iterator.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","node_modules/@ledgerhq/logs/src/index.ts"],"sourcesContent":["import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","import EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\n/**\n */\nexport type Device = any; // Should be a union type of all possible Device object's shape\n\nexport type DescriptorEventType = \"add\" | \"remove\";\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport interface DescriptorEvent<Descriptor> {\n  type: DescriptorEventType;\n  descriptor: Descriptor;\n  deviceModel?: DeviceModel | null | undefined;\n  device?: Device;\n}\n\n/**\n */\nexport type Observer<Ev> = Readonly<{\n  next: (event: Ev) => unknown;\n  error: (e: any) => unknown;\n  complete: () => unknown;\n}>;\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\n\nexport default class Transport {\n  exchangeTimeout = 30000;\n  unresponsiveTimeout = 15000;\n  deviceModel: DeviceModel | null | undefined = null;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static readonly isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static readonly list: () => Promise<Array<any>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\n  const sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n  })\n   */\n  static readonly listen: (\n    observer: Observer<DescriptorEvent<any>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\n  TransportFoo.open(descriptor).then(transport => ...)\n   */\n  static readonly open: (\n    descriptor?: any,\n    timeout?: number\n  ) => Promise<Transport>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: (...args: Array<any>) => any): void {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: any): void {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number): void {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number): void {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout = 3000,\n    listenTimeout?: number\n  ): Promise<Transport> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: Promise<void> | null | undefined;\n  exchangeAtomicImpl = async (\n    f: () => Promise<Buffer | void>\n  ): Promise<Buffer | void> => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n\n    let resolveBusy;\n    const busyPromise: Promise<void> = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n\n    try {\n      const res = await f();\n\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Record<string, any>,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (const methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock: string | null = null;\n\n  decorateAppAPIMethod<R, A extends any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: any,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n"],"names":["$b95dc6f85d7a5443$var$ledgerDevices","vendorId","$83X6F","ledgerUSBVendorId","$b95dc6f85d7a5443$var$isSupported","Promise","resolve","window","navigator","hid","$b95dc6f85d7a5443$var$getHID","$degpm","TransportError","$b95dc6f85d7a5443$var$requestLedgerDevices","requestDevice","filters","device","_a","sent","Array","isArray","$b95dc6f85d7a5443$var$getLedgerDevices","getDevices","filter","d","$b95dc6f85d7a5443$export$2e2bcd8739ae039","_super","TransportWebHID1","_this1","call","this","channel","Math","floor","random","packetSize","inputs","read","length","shift","success","inputCallback","onInputReport","e","buffer","$b95dc6f85d7a5443$require$Buffer","from","data","push","_disconnectEmitted","_emitDisconnect","emit","exchange","apdu","$b95dc6f85d7a5443$var$__awaiter","exchangeAtomicImpl","_this","$lN7Vg","log","toString","framing","$efB1Y","default","blocks","makeBlocks","i","sendReport","_b","result","getReducedResult","acc","reduceResponse","message","includes","DisconnectedDeviceDuringOperation","_a1","deviceModel","productId","identifyUSBProductId","undefined","addEventListener","$b95dc6f85d7a5443$var$__extends","request","$b95dc6f85d7a5443$var$__read","apply","open","openConnected","devices","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","isSupported","list","listen","observer","unsubscribed","existingDevices","$b95dc6f85d7a5443$var$getFirstLedgerDevice","then","next","type","descriptor","complete","error","TransportOpenUserCancelled","unsubscribe","$6kOXc","$49cc22b37427292e$var$Transport","Transport1","exchangeTimeout","unresponsiveTimeout","_events","$parcel$interopDefault","$7etJZ","send","cla","ins","p1","p2","statusList","$49cc22b37427292e$require$Buffer","alloc","StatusCodes","OK","concat","response","sw","readUInt16BE","some","s","TransportStatusError","f","$49cc22b37427292e$var$__awaiter","TransportRaceCondition","busyPromise","r","resolveBusy","unresponsiveReached","timeout","setTimeout","res","clearTimeout","_appAPIlock","_apdu","Error","_key","on","eventName","cb","off","removeListener","event","args","_i","arguments","$49cc22b37427292e$var$__spreadArray","$49cc22b37427292e$var$__read","setDebugMode","console","warn","setExchangeTimeout","setExchangeUnresponsiveTimeout","create","openTimeout","listenTimeout","reject","found","sub","listenTimeoutId","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","decorateAppAPIMethods","self","methods","scrambleKey","methods_1","$49cc22b37427292e$var$__values","methods_1_1","done","methodName","value","decorateAppAPIMethod","ctx","$49cc22b37427292e$export$2e2bcd8739ae039","$a5ff30f0873f7620$export$2e2bcd8739ae039","$a5ff30f0873f7620$var$initialAcc","$a5ff30f0873f7620$require$Buffer","dataLength","sequence","b","writeUInt16BE","blockSize","nbBlocks","ceil","fill","head","writeUInt8","chunk","slice","readUInt8","chunkData","$5dec73da4f32e22b$export$b8d24b2c0d9c5549","DeviceModelId1","$5dec73da4f32e22b$var$devices","$5dec73da4f32e22b$var$_a","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","$7b4DE","lt","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","$5dec73da4f32e22b$var$devicesList","Object","values","$5dec73da4f32e22b$export$268c42a4ddec87f3","$5dec73da4f32e22b$export$df8f4444a7c73154","usbProductId","legacy","find","mm","$5dec73da4f32e22b$var$bluetoothServices","$5dec73da4f32e22b$var$serviceUuidToInfos","$5dec73da4f32e22b$var$id","$5dec73da4f32e22b$var$deviceModel","$5dec73da4f32e22b$var$bluetoothSpec","$5dec73da4f32e22b$var$i","$5dec73da4f32e22b$var$spec","replace","$5dec73da4f32e22b$var$__assign","$1Fo37","parcelRequire","module","exports","$eNeuW","$iQPDj","$iwzHB","$3GdL7","$k63ih","$eAJ9b","$2KAYz","$gJbNx","$8jt6E","$5IWPb","$h4pf4","$9BL4L","$bi5Wq","$hr7uo","$hmPa4","$2ujDC","$8UdES","$eWBQR","$hs2CC","$hfCMX","$bZn9y","$l8Agr","$gvDMw","$34lOt","$kRsez","$kHUG0","$gDdtw","$2XDJZ","$9odsJ","$7BTrr","$iH2YZ","$kWNmu","$ixOxa","$1eqHO","$6ZBo9","$4Qgh6","$cSQjL","$2B6YX","re","src","tokens","t","SEMVER_SPEC_VERSION","$jSdlU","compareIdentifiers","$lJO8q","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","R","createToken","name","isGlobal","index","$gEWXU","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","$136c467abd10119c$require$MAX_SAFE_COMPONENT_LENGTH","COERCE","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","$e77d6af33018f99d$var$MAX_SAFE_INTEGER","Number","MAX_SAFE_INTEGER","$hPtJY","$c20e1f0bb1d4aa00$var$debug","env","MAX_LENGTH","$1e4473f8e581e095$var$SemVer","constructor","version","options","$gh976","loose","includePrerelease","TypeError","$1e4473f8e581e095$require$MAX_LENGTH","m","trim","match","$1e4473f8e581e095$require$re","$1e4473f8e581e095$require$t","LOOSE","FULL","raw","major","minor","patch","$1e4473f8e581e095$require$MAX_SAFE_INTEGER","prerelease","split","map","test","num","build","format","join","compare","other","compareMain","comparePre","$1e4473f8e581e095$require$compareIdentifiers","a","compareBuild","inc","release","identifier","isNaN","$bd954d9ecda20689$var$opts","k","reduce","o","$fd34b0b3a3ee3537$var$numeric","$fd34b0b3a3ee3537$var$compareIdentifiers","anum","bnum","$ac50e3518c9e1cf2$require$MAX_LENGTH","$ac50e3518c9e1cf2$require$re","$ac50e3518c9e1cf2$require$t","er","v","version1","version2","v1","v2","hasPre","prefix","defaultResult","key","parsed","versionA","versionB","sort","op","String","rtl","$c04e66671d64d088$require$re","$c04e66671d64d088$require$t","COERCERTL","exec","lastIndex","$23c2aa77ee272450$var$ANY","Symbol","$23c2aa77ee272450$var$Comparator","ANY","comp","parse","semver","operator","$23c2aa77ee272450$require$re","$23c2aa77ee272450$require$t","COMPARATORLOOSE","COMPARATOR","intersects","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","$f2fea88ed1a42bf2$var$Range","range","set","parseRange","c","first","$f2fea88ed1a42bf2$var$isNullSet","$f2fea88ed1a42bf2$var$isAny","comps","memoKey","keys","cached","$f2fea88ed1a42bf2$var$cache","get","hr","$f2fea88ed1a42bf2$require$re","$f2fea88ed1a42bf2$require$t","HYPHENRANGELOOSE","HYPHENRANGE","$f2fea88ed1a42bf2$var$hyphenReplace","COMPARATORTRIM","$f2fea88ed1a42bf2$require$comparatorTrimReplace","rangeList","TILDETRIM","$f2fea88ed1a42bf2$require$tildeTrimReplace","CARETTRIM","$f2fea88ed1a42bf2$require$caretTrimReplace","$f2fea88ed1a42bf2$var$parseComparator","$f2fea88ed1a42bf2$var$replaceGTE0","rangeMap","Map","comparators","comp1","size","has","delete","thisComparators","$f2fea88ed1a42bf2$var$isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","$f2fea88ed1a42bf2$var$testSet","max","remainingComparators","testComparator","pop","otherComparator","$f2fea88ed1a42bf2$var$replaceCarets","$f2fea88ed1a42bf2$var$replaceTildes","$f2fea88ed1a42bf2$var$replaceXRanges","$f2fea88ed1a42bf2$var$replaceStars","$f2fea88ed1a42bf2$var$isX","toLowerCase","$f2fea88ed1a42bf2$var$replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","$f2fea88ed1a42bf2$var$replaceCaret","CARETLOOSE","CARET","z","$f2fea88ed1a42bf2$var$replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","allowed","$849cd0fb8cde656f$var$MAX","$849cd0fb8cde656f$var$LENGTH","$849cd0fb8cde656f$var$LENGTH_CALCULATOR","$849cd0fb8cde656f$var$ALLOW_STALE","$849cd0fb8cde656f$var$MAX_AGE","$849cd0fb8cde656f$var$DISPOSE","$849cd0fb8cde656f$var$NO_DISPOSE_ON_SET","$849cd0fb8cde656f$var$LRU_LIST","$849cd0fb8cde656f$var$CACHE","$849cd0fb8cde656f$var$UPDATE_AGE_ON_GET","$849cd0fb8cde656f$var$naiveLength","$849cd0fb8cde656f$var$get","doUse","node","hit","$849cd0fb8cde656f$var$isStale","$849cd0fb8cde656f$var$del","now","Date","unshiftNode","maxAge","diff","$849cd0fb8cde656f$var$trim","walker","tail","prev","removeNode","$849cd0fb8cde656f$var$Entry","$849cd0fb8cde656f$var$forEachStep","fn","thisp","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","toArray","$5qBd4","dump","h","dumpLru","len","item","unshift","peek","del","load","arr","l","expiresAt","prune","$3f3c3e91d91e9f6c$var$Yallist","$3f3c3e91d91e9f6c$var$insert","inserted","$3f3c3e91d91e9f6c$var$Node","$3f3c3e91d91e9f6c$var$push","$3f3c3e91d91e9f6c$var$unshift","Node","pushNode","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","nodes","reverse","Yallist","iterator","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","$f3ff839f6a966182$var$ANY","hilo","gtfn","ltefn","ltfn","ecomp","high","low","r1","r2","ranges","simplified","original","$96131c64a2bc287a$var$ANY","$96131c64a2bc287a$var$simpleSubset","dom","eqSet","Set","gt","gtltComp","higher","lower","hasDomLT","hasDomGT","$96131c64a2bc287a$var$higherGT","$96131c64a2bc287a$var$lowerLT","add","eq","needDomLTPre","needDomGTPre","c1","sawNonNull","OUTER","simpleSub","simpleDom","isSub","$fdd451dd43e0ce6f$var$id","$fdd451dd43e0ce6f$var$subscribers","$fdd451dd43e0ce6f$export$bef1f36f5486a6a3","obj","date","log1","$fdd451dd43e0ce6f$var$dispatch","__ledgerLogsListen","indexOf"],"version":3,"file":"TransportWebHID.50b5f752.js.map"}